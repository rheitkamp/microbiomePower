}
return(matrix(y,nrow=rowsize, ncol=colsize, dimnames=dims))
}
a <- read.table("UpperRmean.txt")
a <- read.table("UpperRFall.txt")
Premainder(a)
ADPreaminder <- function(b){
rowsize <- dim(b)[1]
colsize <- dim(b)[2]
dims <- dimnames(b)
PR <- matrix(nrow=rowsize, ncol=colsize, dimnames=dims)
for(i in 1:colsize){
total <- apply(X=b, MARGIN=2, sum)[i]
PR[1,i] <- b[1,i]
total <- total - b[1,i]
for(k in 2:rowsize){
PR[k,i] <- b[k,i]/total
total <- total - b[k,i]
}
}
}
ADPreaminder(b)
ADPreaminder <- function(b){
rowsize <- dim(b)[1]
colsize <- dim(b)[2]
dims <- dimnames(b)
PR <- matrix(nrow=rowsize, ncol=colsize, dimnames=dims)
for(i in 1:colsize){
total <- apply(X=b, MARGIN=2, sum)[i]
PR[1,i] <- b[1,i]
total <- total - b[1,i]
for(k in 2:rowsize){
PR[k,i] <- b[k,i]/total
total <- total - b[k,i]
}
}
return(matrix(PR))
}
ADPreaminder(b)
rowsize <- dim(c)[1]
colsize <- dim(c)[2]
dims <- dimnames(c)
y <- matrix(nrow=rowsize, ncol=colsize, dimnames=dims)
for(i in 1:rowsize){
total <- apply(X=c,MARGIN=1,sum)[i]
y[i,1] <- c[i,1]/100
total <- total - c[i,1]
for(k in 2:colsize){
y[i,k] <- c[i,k]/total
total <- total - c[i,k]
}
}
View(y)
View(b)
groupfit <- list(fit1$reads, fit2$reads)
pio <- pioest(groupfit)
fix(groupfit)
Premainder(a)
Premainder(c)
Premainder <- function(x) {
rowsize <- dim(x)[1]
colsize <- dim(x)[2]
dims <- dimnames(x)
y <- matrix(nrow=rowsize, ncol=colsize, dimnames=dims)
for(i in 1:rowsize){
total <- apply(X=x,MARGIN=1,sum)[i]
y[i,1] <- x[i,1]/100
total <- total - x[i,1]
for(k in 2:colsize){
y[i,k] <- x[i,k]/ total
total <- total - x[i,k]
}
}
return(matrix(y,nrow=rowsize, ncol=colsize, dimnames=dims))
}
Premainder(c)
getBetaParams <- function(mean, sd) {
m <- (1-mean)/mean
n <- 1 + m
alpha <- (1/n)*(m/(sd^2*n^2)-1)
beta <- m * alpha
params <- c(alpha, beta)
return(a,b)
}
getBetaParams(25,5)
getBetaParams(.25,.5)
getBetaParams <- function(mean, sd) {
m <- (1-mean)/mean
n <- 1 + m
alpha <- (1/n)*(m/(sd^2*n^2)-1)
beta <- m * alpha
params <- c(alpha, beta)
return(alpha,beta)
}
getBetaParams(.25,.5)
getBetaParams <- function(mean, sd) {
m <- (1-mean)/mean
n <- 1 + m
alpha <- (1/n)*(m/(sd^2*n^2)-1)
beta <- m * alpha
params <- c(alpha, beta)
return(params)
}
getBetaParams <- function(mean, sd) {
m <- (1-mean)/mean
n <- 1 + m
alpha <- (1/n)*(m/(sd^2*n^2)-1)
beta <- m * alpha
params <- c(a=alpha, b=beta)
return(params)
}
getBetaParams(.25,.5)
getBetaParams(.75,.23)
Proto <- getBetaParams(.75,.23)
library(PearsonDS)
getBetaDist <- function(mean, sd) {
m <- (1-mean)/mean
n <- 1 + m
alpha <- (1/n)*(m/(sd^2*n^2)-1)
beta <- m * alpha
betadist <- rpearsonI(n=1,a=alpha,b=beta,location=0,scale=1)
return(betadist)
}
getBetaDist(.75,.23)
getBetaRand <- function(mean, sd) {
m <- (1-mean)/mean
n <- 1 + m
alpha <- (1/n)*(m/(sd^2*n^2)-1)
beta <- m * alpha
betadist <- rpearsonI(n=1,a=alpha,b=beta,location=0,scale=1)
return(betadist)
}
getBetaRand(.75,.23)
getBetaRand(.75,.23)
getBetaRand(.75,.23)
getBetaRand(.75,.23)
getBetaRand(.75,.23)
>>>>>>> 018459b0d559556cdfcaed75762a21b741bea85c
library(HMP)
#Pilot Data
#********************************************
#Loading data
data(throat)
data(tonsils)
Gp1=throat
Gp2=tonsils
#Preprocessing 1:removing taxa that are zeroes in both groups
#If the data loaded consists of columns given by taxa units and rows subjects (usually called species data),
#then the following preprocessing should be done. Note that you are using the data of the package (ranked data),
#then there is not need to do the following.
comb=rbind(Gp1,Gp2)
index=which(colSums(comb)==0)
if(length(index)>0){
Gp1=Gp1[,-index]
Gp2=Gp2[,-index]
}
#Computing and visualizing taxa frequency means for each group
mygroup <- list(Gp1,Gp2)
names(mygroup)<-c('throat','tonsils')
Sites.pi.MoM=do.call(rbind,lapply(mygroup,function(x) DM.MoM(x)$pi))
Sites.pi.MoM=Sites.pi.MoM[,order(abs(Sites.pi.MoM[1,]-Sites.pi.MoM[2,]),decreasing=T)]
#Ploting taxa frequency means
matplot(t(Sites.pi.MoM),type='o',pch=19,axes="FALSE", ann="FALSE",col=c('blue','red'),ylim=c(-0.25,0.6))
y=colnames(Sites.pi.MoM)
nc=dim((Sites.pi.MoM))[2]
axis(1,at=1:nc, lab=F, hadj=3,pos=-0.009)
text(1:nc,-0.02, srt=90,adj=1,labels=y,xpd=T, cex=1)
axis(2, las=1, at=seq(0,0.6,0.05))
legend("topright",legend=c(rownames(Sites.pi.MoM)), cex=0.8, col=c('blue','red'), bty="n",pch=19)
text(-1.5,0.01,srt=90,adj=-1,labels='Taxa Abundance',xpd=T, cex=1)
#text(21,-0.01,srt=0,adj=0,labels='Taxa Abundance',cex=1)
#Selecting taxa with weigthed average across groups above 1%
#On one part this is to facilitate convergence of the test statistics to the asymptotic
#distribution and being able to use the properties of this distribution to answer the hypothesis
#On a second part, this is also motivated by the uncertainty regarding the abundance of rare taxa,
#meaning, we do not know if their abundances are correct or not.
fit1=DM.MoM(Gp1)
fit2=DM.MoM(Gp2)
fit1$reads=apply(Gp1,1,sum)
fit2$reads=apply(Gp2,1,sum)
group.data <- list(Gp1, Gp2)
pio <- pioest(group.data)
#pio=pioest(fit1,fit2)
taxaselection=which(pio>0.01)
Gp1sel=cbind(Gp1[,taxaselection],rowSums(Gp1[,-taxaselection]))
Gp2sel=cbind(Gp2[,taxaselection],rowSums(Gp2[,-taxaselection]))
nc=dim(Gp1sel)[2]
colnames(Gp1sel)[nc]<-'Pooled taxa'
colnames(Gp2sel)[nc]<-'Pooled taxa'
C.alpha.multinomial(Gp1sel)
C.alpha.multinomial(Gp2sel)
fit1=DM.MoM((Gp1sel))
fit2=DM.MoM((Gp2sel))
fit1$reads=colSums(Gp1sel)
fit2$reads=colSums(Gp2sel)
Sites.pi.MoMsel=rbind(fit1$pi,fit2$pi)
Sites.pi.MoMsel=Sites.pi.MoMsel[,order(abs(Sites.pi.MoMsel[1,]-Sites.pi.MoMsel[2,]),decreasing=T)]
rownames(Sites.pi.MoMsel)<-rownames(Sites.pi.MoM)
matplot(t(Sites.pi.MoMsel),type='o',pch=19,axes="FALSE", ann="FALSE",col=c('blue','red'),ylim=c(-0.25,0.6))
y=colnames(Sites.pi.MoMsel)
nc=dim((Sites.pi.MoMsel))[2]
axis(1,at=1:nc, lab=F, hadj=3,pos=-0.009)
text(1:nc,-0.02, srt=90,adj=1,labels=y,xpd=T, cex=1)
axis(2, las=1, at=seq(0,0.6,0.05))
legend("topright",legend=c(rownames(Sites.pi.MoMsel)), cex=0.8, col=c('blue','red'), bty="n",pch=19)
text(-1.5,0.01,srt=90,adj=-1,labels='Taxa Abundance',xpd=T, cex=1)
#text(21,-0.01,srt=0,adj=0,labels='Taxa Abundance',cex=1)
pvalue<-Xmcupo.sevsample(mygroup,dim(Gp2)[2])
pvalue
#Power calculation procedure
pi_2gr=rbind(fit1$pi, fit2$pi)
group.theta=c(fit1$theta,fit2$theta)
MC=10000 #number of Monte Carlo experiments
subjects=c(5,10,20,25) #number of subjects per group
nreads=c(50000) #same number of reads per subject (see package to define different number of reads)
subject.reads = expand.grid(subj=subjects, reads=nreads)
range=subject.reads
power=apply(range,1,function(x){MC.Xmcupo.statistics(Nrs=rep(x[2], x[1]), MC, pi0=fit2$pi, group.pi=pi_2gr, group.theta=group.theta, type = "ha", siglev = 0.05)})
power.sample.size=cbind(range,power)
power.sample.size.table=xtabs(power~subj+reads,data=power.sample.size)
power.sample.size.table
read.table("ADcontrolReads.txt")
Flare <- read.table("FlareReads.txt")
Gp1=Control
Control <- read.table("ADcontrolReads.txt")
Flare <- read.table("FlareReads.txt")
Gp1=Control
Gp2=Flare
comb=rbind(Gp1,Gp2)
index=which(colSums(comb)==0)
Control <- read.table("ADcontrolReads.txt")
Flare <- read.table("FlareReads.txt")
Gp1=Control
Gp2=Flare
comb=rbind(Gp1,Gp2)
Control <- data.frame(read.table("ADcontrolReads.txt"))
Flare <- data.frame(read.table("FlareReads.txt"))
Gp1=Control
Gp2=Flare
comb=rbind(Gp1,Gp2)
View(Control)
View(Flare)
Control <- read.table("ADcontrolReads.txt")
Flare <- read.table("FlareReads.txt")
rownames(Control)
rownames(Control) <- rownames(prefix=Subject)
rownames(Control) <- rownames(Control,prefix=Subject)
View(Control)
mygroup <- list(Gp1,Gp2)
names(mygroup)<-c('Control','Flare')
mygroup
Sites.pi.MoM=do.call(rbind,lapply(mygroup,function(x) DM.MoM(x)$pi))
Sites.pi.MoM=Sites.pi.MoM[,order(abs(Sites.pi.MoM[1,]-Sites.pi.MoM[2,]),decreasing=T)]
matplot(t(Sites.pi.MoM),type='o',pch=19,axes="FALSE", ann="FALSE",col=c('blue','red'),ylim=c(-0.25,0.6))
y=colnames(Sites.pi.MoM)
nc=dim((Sites.pi.MoM))[2]
axis(1,at=1:nc, lab=F, hadj=3,pos=-0.009)
text(1:nc,-0.02, srt=90,adj=1,labels=y,xpd=T, cex=1)
axis(2, las=1, at=seq(0,0.6,0.05))
legend("topright",legend=c(rownames(Sites.pi.MoM)), cex=0.8, col=c('blue','red'), bty="n",pch=19)
text(-1.5,0.01,srt=90,adj=-1,labels='Taxa Abundance',xpd=T, cex=1)
#text(21,-0.01,srt=0,adj=0,labels='Taxa Abundance',cex=1)
fit1=DM.MoM(Gp1)
fit2=DM.MoM(Gp2)
fit1$reads=apply(Gp1,1,sum)
fit2$reads=apply(Gp2,1,sum)
group.data <- list(Gp1, Gp2)
pio <- pioest(group.data)
pio
#pio=pioest(fit1,fit2)
taxaselection=which(pio>0.01)
Gp1sel=cbind(Gp1[,taxaselection],rowSums(Gp1[,-taxaselection]))
Gp2sel=cbind(Gp2[,taxaselection],rowSums(Gp2[,-taxaselection]))
nc=dim(Gp1sel)[2]
colnames(Gp1sel)[nc]<-'Pooled taxa'
colnames(Gp2sel)[nc]<-'Pooled taxa'
C.alpha.multinomial(Gp1sel)
C.alpha.multinomial(Gp2sel)
Gp1sel
Gp2sel
C.alpha.multinomial(Gp1sel)
fit1=DM.MoM((Gp1sel))
fit2=DM.MoM((Gp2sel))
fit1$reads=colSums(Gp1sel)
fit2$reads=colSums(Gp2sel)
fit
fit1
Sites.pi.MoMsel=rbind(fit1$pi,fit2$pi)
Sites.pi.MoMsel=Sites.pi.MoMsel[,order(abs(Sites.pi.MoMsel[1,]-Sites.pi.MoMsel[2,]),decreasing=T)]
rownames(Sites.pi.MoMsel)<-rownames(Sites.pi.MoM)
matplot(t(Sites.pi.MoMsel),type='o',pch=19,axes="FALSE", ann="FALSE",col=c('blue','red'),ylim=c(-0.25,0.6))
y=colnames(Sites.pi.MoMsel)
nc=dim((Sites.pi.MoMsel))[2]
axis(1,at=1:nc, lab=F, hadj=3,pos=-0.009)
text(1:nc,-0.02, srt=90,adj=1,labels=y,xpd=T, cex=1)
axis(2, las=1, at=seq(0,0.6,0.05))
legend("topright",legend=c(rownames(Sites.pi.MoMsel)), cex=0.8, col=c('blue','red'), bty="n",pch=19)
text(-1.5,0.01,srt=90,adj=-1,labels='Taxa Abundance',xpd=T, cex=1)
#text(21,-0.01,srt=0,adj=0,labels='Taxa Abundance',cex=1)
pvalue<-Xmcupo.sevsample(mygroup,dim(Gp2)[2])
pvalue
pi_2gr=rbind(fit1$pi, fit2$pi)
group.theta=c(fit1$theta,fit2$theta)
MC=10000 #number of Monte Carlo experiments
#Defining range of subjects and sample size
subjects=c(5,10,20,25) #number of subjects per group
nreads=c(50000) #same number of reads per subject (see package to define different number of reads)
subject.reads = expand.grid(subj=subjects, reads=nreads)
range=subject.reads
power=apply(range,1,function(x){MC.Xmcupo.statistics(Nrs=rep(x[2], x[1]), MC, pi0=fit2$pi, group.pi=pi_2gr, group.theta=group.theta, type = "ha", siglev = 0.05)})
power.sample.size=cbind(range,power)
power.sample.size.table=xtabs(power~subj+reads,data=power.sample.size)
power.sample.size.table
subjects=c(5,10,20,25,50) #number of subjects per group
nreads=c(50000) #same number of reads per subject (see package to define different number of reads)
subject.reads = expand.grid(subj=subjects, reads=nreads)
range=subject.reads
power=apply(range,1,function(x){MC.Xmcupo.statistics(Nrs=rep(x[2], x[1]), MC, pi0=fit2$pi, group.pi=pi_2gr, group.theta=group.theta, type = "ha", siglev = 0.05)})
power.sample.size=cbind(range,power)
power.sample.size.table=xtabs(power~subj+reads,data=power.sample.size)
power.sample.size.table
subjects=c(100,150) #number of subjects per group
nreads=c(50000) #same number of reads per subject (see package to define different number of reads)
subject.reads = expand.grid(subj=subjects, reads=nreads)
range=subject.reads
power=apply(range,1,function(x){MC.Xmcupo.statistics(Nrs=rep(x[2], x[1]), MC, pi0=fit2$pi, group.pi=pi_2gr, group.theta=group.theta, type = "ha", siglev = 0.05)})
power.sample.size=cbind(range,power)
power.sample.size.table=xtabs(power~subj+reads,data=power.sample.size)
power.sample.size.table
install.packages(c("ape", "class", "foreign", "labeling", "MASS", "munsell", "nlme", "nnet", "phylosim", "R.methodsS3", "R.oo", "spatial", "VennDiagram"))
pi_2gr=rbind(fit1$pi, fit2$pi)
group.theta=c(fit1$theta,fit2$theta)
MC=10000 #number of Monte Carlo experiments
#Defining range of subjects and sample size
subjects=c(100,150) #number of subjects per group
nreads=c(50000) #same number of reads per subject (see package to define different number of reads)
subject.reads = expand.grid(subj=subjects, reads=nreads)
range=subject.reads
power=apply(range,1,function(x){MC.Xmcupo.statistics(Nrs=rep(x[2], x[1]), MC, pi0=fit2$pi, group.pi=pi_2gr, group.theta=group.theta, type = "ha", siglev = 0.05)})
power.sample.size=cbind(range,power)
power.sample.size.table=xtabs(power~subj+reads,data=power.sample.size)
power.sample.size.table
Control <- read.table("ADcontrolReads.txt")
Flare <- read.table("FlareReads.txt")
Gp1=Control
Gp2=Flare
#Preprocessing 1:removing taxa that are zeroes in both groups
#If the data loaded consists of columns given by taxa units and rows subjects (usually called species data),
#then the following preprocessing should be done. Note that you are using the data of the package (ranked data),
#then there is not need to do the following.
comb=rbind(Gp1,Gp2)
index=which(colSums(comb)==0)
if(length(index)>0){
Gp1=Gp1[,-index]
Gp2=Gp2[,-index]
}
#Computing and visualizing taxa frequency means for each group
mygroup <- list(Gp1,Gp2)
names(mygroup)<-c('Control','Flare')
Sites.pi.MoM=do.call(rbind,lapply(mygroup,function(x) DM.MoM(x)$pi))
Sites.pi.MoM=Sites.pi.MoM[,order(abs(Sites.pi.MoM[1,]-Sites.pi.MoM[2,]),decreasing=T)]
#Ploting taxa frequency means
matplot(t(Sites.pi.MoM),type='o',pch=19,axes="FALSE", ann="FALSE",col=c('blue','red'),ylim=c(-0.25,0.6))
y=colnames(Sites.pi.MoM)
nc=dim((Sites.pi.MoM))[2]
axis(1,at=1:nc, lab=F, hadj=3,pos=-0.009)
text(1:nc,-0.02, srt=90,adj=1,labels=y,xpd=T, cex=1)
axis(2, las=1, at=seq(0,0.6,0.05))
legend("topright",legend=c(rownames(Sites.pi.MoM)), cex=0.8, col=c('blue','red'), bty="n",pch=19)
text(-1.5,0.01,srt=90,adj=-1,labels='Taxa Abundance',xpd=T, cex=1)
#text(21,-0.01,srt=0,adj=0,labels='Taxa Abundance',cex=1)
#Selecting taxa with weigthed average across groups above 1%
#On one part this is to facilitate convergence of the test statistics to the asymptotic
#distribution and being able to use the properties of this distribution to answer the hypothesis
#On a second part, this is also motivated by the uncertainty regarding the abundance of rare taxa,
#meaning, we do not know if their abundances are correct or not.
fit1=DM.MoM(Gp1)
fit2=DM.MoM(Gp2)
fit1$reads=apply(Gp1,1,sum)
fit2$reads=apply(Gp2,1,sum)
group.data <- list(Gp1, Gp2)
pio <- pioest(group.data)
#pio=pioest(fit1,fit2)
taxaselection=which(pio>0.01)
Gp1sel=cbind(Gp1[,taxaselection],rowSums(Gp1[,-taxaselection]))
Gp2sel=cbind(Gp2[,taxaselection],rowSums(Gp2[,-taxaselection]))
nc=dim(Gp1sel)[2]
colnames(Gp1sel)[nc]<-'Pooled taxa'
colnames(Gp2sel)[nc]<-'Pooled taxa'
#Hypothesis testing;
#Testing DM versus M
C.alpha.multinomial(Gp1sel)
C.alpha.multinomial(Gp2sel)
#Fitting DM
fit1=DM.MoM((Gp1sel))
fit2=DM.MoM((Gp2sel))
fit1$reads=colSums(Gp1sel)
fit2$reads=colSums(Gp2sel)
#Ploting
Sites.pi.MoMsel=rbind(fit1$pi,fit2$pi)
Sites.pi.MoMsel=Sites.pi.MoMsel[,order(abs(Sites.pi.MoMsel[1,]-Sites.pi.MoMsel[2,]),decreasing=T)]
rownames(Sites.pi.MoMsel)<-rownames(Sites.pi.MoM)
matplot(t(Sites.pi.MoMsel),type='o',pch=19,axes="FALSE", ann="FALSE",col=c('blue','red'),ylim=c(-0.25,0.6))
y=colnames(Sites.pi.MoMsel)
nc=dim((Sites.pi.MoMsel))[2]
axis(1,at=1:nc, lab=F, hadj=3,pos=-0.009)
text(1:nc,-0.02, srt=90,adj=1,labels=y,xpd=T, cex=1)
axis(2, las=1, at=seq(0,0.6,0.05))
legend("topright",legend=c(rownames(Sites.pi.MoMsel)), cex=0.8, col=c('blue','red'), bty="n",pch=19)
text(-1.5,0.01,srt=90,adj=-1,labels='Taxa Abundance',xpd=T, cex=1)
#text(21,-0.01,srt=0,adj=0,labels='Taxa Abundance',cex=1)
#Comparing the taxa frequency mean across groups
pvalue<-Xmcupo.sevsample(mygroup,dim(Gp2)[2])
pvalue
#Power calculation procedure
pi_2gr=rbind(fit1$pi, fit2$pi)
group.theta=c(fit1$theta,fit2$theta)
MC=10000 #number of Monte Carlo experiments
#Defining range of subjects and sample size
subjects=c(100,150) #number of subjects per group
nreads=c(50000) #same number of reads per subject (see package to define different number of reads)
subject.reads = expand.grid(subj=subjects, reads=nreads)
range=subject.reads
power=apply(range,1,function(x){MC.Xmcupo.statistics(Nrs=rep(x[2], x[1]), MC, pi0=fit2$pi, group.pi=pi_2gr, group.theta=group.theta, type = "ha", siglev = 0.05)})
power.sample.size=cbind(range,power)
power.sample.size.table=xtabs(power~subj+reads,data=power.sample.size)
power.sample.size.table
#Functions that need to be overwritten
library(HMP)
Gp1=Control
Gp2=Flare
#Preprocessing 1:removing taxa that are zeroes in both groups
#If the data loaded consists of columns given by taxa units and rows subjects (usually called species data),
#then the following preprocessing should be done. Note that you are using the data of the package (ranked data),
#then there is not need to do the following.
comb=rbind(Gp1,Gp2)
index=which(colSums(comb)==0)
if(length(index)>0){
Gp1=Gp1[,-index]
Gp2=Gp2[,-index]
}
#Computing and visualizing taxa frequency means for each group
mygroup <- list(Gp1,Gp2)
names(mygroup)<-c('Control','Flare')
Sites.pi.MoM=do.call(rbind,lapply(mygroup,function(x) DM.MoM(x)$pi))
Sites.pi.MoM=Sites.pi.MoM[,order(abs(Sites.pi.MoM[1,]-Sites.pi.MoM[2,]),decreasing=T)]
#Ploting taxa frequency means
matplot(t(Sites.pi.MoM),type='o',pch=19,axes="FALSE", ann="FALSE",col=c('blue','red'),ylim=c(-0.25,0.6))
y=colnames(Sites.pi.MoM)
nc=dim((Sites.pi.MoM))[2]
axis(1,at=1:nc, lab=F, hadj=3,pos=-0.009)
text(1:nc,-0.02, srt=90,adj=1,labels=y,xpd=T, cex=1)
axis(2, las=1, at=seq(0,0.6,0.05))
legend("topright",legend=c(rownames(Sites.pi.MoM)), cex=0.8, col=c('blue','red'), bty="n",pch=19)
text(-1.5,0.01,srt=90,adj=-1,labels='Taxa Abundance',xpd=T, cex=1)
#text(21,-0.01,srt=0,adj=0,labels='Taxa Abundance',cex=1)
#Selecting taxa with weigthed average across groups above 1%
#On one part this is to facilitate convergence of the test statistics to the asymptotic
#distribution and being able to use the properties of this distribution to answer the hypothesis
#On a second part, this is also motivated by the uncertainty regarding the abundance of rare taxa,
#meaning, we do not know if their abundances are correct or not.
fit1=DM.MoM(Gp1)
fit2=DM.MoM(Gp2)
fit1$reads=apply(Gp1,1,sum)
fit2$reads=apply(Gp2,1,sum)
group.data <- list(Gp1, Gp2)
pio <- pioest(group.data)
#pio=pioest(fit1,fit2)
taxaselection=which(pio>0.01)
Gp1sel=cbind(Gp1[,taxaselection],rowSums(Gp1[,-taxaselection]))
Gp2sel=cbind(Gp2[,taxaselection],rowSums(Gp2[,-taxaselection]))
nc=dim(Gp1sel)[2]
colnames(Gp1sel)[nc]<-'Pooled taxa'
colnames(Gp2sel)[nc]<-'Pooled taxa'
#Hypothesis testing;
#Testing DM versus M
C.alpha.multinomial(Gp1sel)
C.alpha.multinomial(Gp2sel)
#Fitting DM
fit1=DM.MoM((Gp1sel))
fit2=DM.MoM((Gp2sel))
fit1$reads=colSums(Gp1sel)
fit2$reads=colSums(Gp2sel)
#Ploting
Sites.pi.MoMsel=rbind(fit1$pi,fit2$pi)
Sites.pi.MoMsel=Sites.pi.MoMsel[,order(abs(Sites.pi.MoMsel[1,]-Sites.pi.MoMsel[2,]),decreasing=T)]
rownames(Sites.pi.MoMsel)<-rownames(Sites.pi.MoM)
matplot(t(Sites.pi.MoMsel),type='o',pch=19,axes="FALSE", ann="FALSE",col=c('blue','red'),ylim=c(-0.25,0.6))
y=colnames(Sites.pi.MoMsel)
nc=dim((Sites.pi.MoMsel))[2]
axis(1,at=1:nc, lab=F, hadj=3,pos=-0.009)
text(1:nc,-0.02, srt=90,adj=1,labels=y,xpd=T, cex=1)
axis(2, las=1, at=seq(0,0.6,0.05))
legend("topright",legend=c(rownames(Sites.pi.MoMsel)), cex=0.8, col=c('blue','red'), bty="n",pch=19)
text(-1.5,0.01,srt=90,adj=-1,labels='Taxa Abundance',xpd=T, cex=1)
#text(21,-0.01,srt=0,adj=0,labels='Taxa Abundance',cex=1)
#Comparing the taxa frequency mean across groups
pvalue<-Xmcupo.sevsample(mygroup,dim(Gp2)[2])
pvalue
#Power calculation procedure
pi_2gr=rbind(fit1$pi, fit2$pi)
group.theta=c(fit1$theta,fit2$theta)
MC=10000 #number of Monte Carlo experiments
#Defining range of subjects and sample size
subjects=c(100,150) #number of subjects per group
nreads=c(50000) #same number of reads per subject (see package to define different number of reads)
subject.reads = expand.grid(subj=subjects, reads=nreads)
range=subject.reads
power=apply(range,1,function(x){MC.Xmcupo.statistics(Nrs=rep(x[2], x[1]), MC, pi0=fit2$pi, group.pi=pi_2gr, group.theta=group.theta, type = "ha", siglev = 0.05)})
power.sample.size=cbind(range,power)
power.sample.size.table=xtabs(power~subj+reads,data=power.sample.size)
power.sample.size.table
