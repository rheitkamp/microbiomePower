rpearson(n=1, params=params[2,])
rpearson(n=1, params=params[3,])
rpearson(n=1, params=params[4,])
rpearson(n=1, params=params[1,])
rpearson(n=1, params=params[2,])
rpearson(n=1, params=params[3,])
rpearson(n=1, params=params[4,])
set.seed(1234)
rpearson(n=1, params=params[1,])
rpearson(n=1, params=params[2,])
rpearson(n=1, params=params[3,])
rpearson(n=1, params=params[4,])
rpearson(n=1, params=params[1,])
rpearson(n=1, params=params[2,])
rpearson(n=1, params=params[3,])
rpearson(n=1, params=params[4,])
rpearson(n=1, params=params[1,])
rpearson(n=1, params=params[2,])
rpearson(n=1, params=params[3,])
rpearson(n=1, params=params[4,])
matrix(c(
rpearson(n=1, params=params[1,]),
rpearson(n=1, params=params[2,]),
rpearson(n=1, params=params[3,]),
rpearson(n=1, params=params[4,]),
))
matrix(c(
rpearson(n=1, params=params[1,]),
rpearson(n=1, params=params[2,]),
rpearson(n=1, params=params[3,]),
rpearson(n=1, params=params[4,])
))
matrix(c(
rpearson(n=1, params=params[1,]),
rpearson(n=1, params=params[2,]),
rpearson(n=1, params=params[3,]),
rpearson(n=1, params=params[4,])
))
a <- matrix(c(
rpearson(n=1, params=params[1,]),
rpearson(n=1, params=params[2,]),
rpearson(n=1, params=params[3,]),
rpearson(n=1, params=params[4,])
))
a
a
rm(a)
a <- matrix(c(
rpearson(n=1, params=params[1,]),
rpearson(n=1, params=params[2,]),
rpearson(n=1, params=params[3,]),
rpearson(n=1, params=params[4,])
))
a
rpearson(n=100, params=params[2,])
mean(rpearson(n=100, params=params[2,]))
median(rpearson(n=100, params=params[2,]))
rm(a)
median(rpearson(n=100, params=params[1,]))
median(rpearson(n=100, params=params[1,]))
median(rpearson(n=100, params=params[1,]))
rpearson(n=1, params=params[1,])
rpearson(n=1, params=params[2,])
rpearson(n=1, params=params[3,])
rpearson(n=1, params=params[4,])
curve(T1, from=0, to=1, ylab=NA)
curve(T2, from=0, to=1, col="blue", add=T)
curve(T3, from=0, to=1, col="red", add=T)
curve(T4, from=0, to=1, col="purple", add=T)
(x <- Premainder(example))
set.seed(1234)
example <- cbind(
matrix(data=c(0.70,0.15,0.10,0.04,0.01), nrow=5, ncol=1, dimnames=list(c("T1", "T2", "T3", "T4", "T5"), "Mean")),
matrix(data=c(0.25,0.20,0.15,0.10,0.05), nrow=5, ncol=1, dimnames=list(c("T1", "T2", "T3", "T4", "T5"), "SD"))
)
(x <- Premainder(example))
params <- collectParameters(x)
library(HMP)
(x <- Premainder(example))
source('~/data sim/ADdata/RevisingFunctionsForGeneralUse15NOV2013.R', echo=TRUE)
(x <- Premainder(example))
params <- collectParameters(x)
T1 <- function (x) dpearson(x=x, params=params[1,])
curve(T1, from=0, to=1)
library(PearsonDS)
T1 <- function (x) dpearson(x=x, params=params[1,])
curve(T1, from=0, to=1)
abline(v=.7)
T2 <- function(x) dpearson(x=x, params=params[2,])
curve(T2, from=0, to=1)
abline(v=.5)
T3 <- function(x) dpearson(x=x, params=params[3,])
curve(T3, from=0, to=1)
abline(v=2/3)
T4 <- function(x) dpearson(x=x, params=params[4,])
curve(T4, from=0, to=1)
abine(v=.8)
abline(v=.8)
abline(v=.7, col="red")
abline(v=.5, col="red")
abline(v=2/3, col="red")
abline(v=.8, col="red")
(x <- Premainder(example))
params
set.seed(1234)
example <- cbind(
matrix(data=c(0.70,0.15,0.10,0.04,0.01), nrow=5, ncol=1, dimnames=list(c("T1", "T2", "T3", "T4", "T5"), "Mean")),
matrix(data=c(0.25,0.20,0.15,0.10,0.05), nrow=5, ncol=1, dimnames=list(c("T1", "T2", "T3", "T4", "T5"), "SD"))
)
(x <- Premainder(example))
params <- collectParameters(x)
source('~/data sim/ADdata/validation/NewValidation/10000SimulatedDatasets/Functions for validation07MAR2014.R', echo=TRUE)
source('~/data sim/ADdata/RevisingFunctionsForGeneralUse15NOV2013.R', echo=TRUE)
set.seed(1234)
example <- cbind(
matrix(data=c(0.70,0.15,0.10,0.04,0.01), nrow=5, ncol=1, dimnames=list(c("T1", "T2", "T3", "T4", "T5"), "Mean")),
matrix(data=c(0.25,0.20,0.15,0.10,0.05), nrow=5, ncol=1, dimnames=list(c("T1", "T2", "T3", "T4", "T5"), "SD"))
)
(x <- Premainder(example))
params <- collectParameters(x)
params
library(HMP)
library(PearsonDS)
simulateBrokenStick(data=example,outputLabel="test",numberSubjects=10)
simulateBrokenStick
source('~/.active-rstudio-document', echo=TRUE)
simulateBrokenStick(data=example,outputLabel="test",numberSubjects=10)
simulateBrokenStick(data=example,outputLabel="test",numberSubjects=100)
source('~/.active-rstudio-document', echo=TRUE)
simulateBrokenStick(data=example,outputLabel="test",numberSubjects=100)
source('~/.active-rstudio-document', echo=TRUE)
simulateBrokenStick(data=example,outputLabel="test",numberSubjects=100)
Provided.SD <- array(data[,2]) #grabs the provided standard deviation
source('~/.active-rstudio-document', echo=TRUE)
simulateBrokenStick(data=example,outputLabel="test",numberSubjects=100)
simulateBrokenStick(data=example,outputLabel="test",numberSubjects=50)
simulateBrokenStick(data=example,outputLabel="test",numberSubjects=15)
simulateBrokenStick(data=example,outputLabel="test",numberSubjects=100)
simulateBrokenStick(data=example,outputLabel="test",numberSubjects=50)
simulateBrokenStick(data=example,outputLabel="test",numberSubjects=25)
simulateBrokenStick(data=example,outputLabel="test",numberSubjects=15)
simulateBrokenStick(data=example,outputLabel="test",numberSubjects=1000)
simulateBrokenStick(data=example,outputLabel="test",numberSubjects=500)
simulateBrokenStick(data=example,outputLabel="test",numberSubjects=250)
simulateBrokenStick(data=example,outputLabel="test",numberSubjects=100)
set.seed(1234)
library(HMP)
library(PearsonDS)
example <- cbind(
matrix(data=c(0.70,0.15,0.10,0.04,0.01), nrow=5, ncol=1, dimnames=list(c("T1", "T2", "T3", "T4", "T5"), "Mean")),
matrix(data=c(0.25,0.20,0.15,0.10,0.05), nrow=5, ncol=1, dimnames=list(c("T1", "T2", "T3", "T4", "T5"), "SD"))
)
(x <- Premainder(example))
params <- collectParameters(x)
source('~/data sim/ADdata/validation/NewValidation/10000SimulatedDatasets/Functions for validation07MAR2014.R', echo=TRUE)
source('~/data sim/ADdata/RevisingFunctionsForGeneralUse15NOV2013.R', echo=TRUE)
params <- collectParameters(x)
(x <- Premainder(example))
params <- collectParameters(x)
simulateBrokenStick(data=example,outputLabel="test",numberSubjects=100)
simData <- simulateBrokenStick(data=example,outputLabel="test",numberSubjects=100)
simData <- simulateBrokenStick(data=example,outputLabel="test",numberSubjects=100)
simData <- simulateBrokenStick(data=example,outputLabel="test",numberSubjects=100)
load("~/data sim/ADdata/validation/NewValidation/10000SimulatedDatasets/MicroSimValidationDatasetsALL28APR2014.RData")
pSimObsControlPvalues
length(which(pSimObsControlPvalues > 0.05))/length(pSimObsControlPvalues)
combine.test(p=pSimObsControlPvalues, method="z.transform")
library(HMP)
library(survcomp)
combine.test(p=pSimObsControlPvalues, method="z.transform")
combine.test(p=pSimObsBaselinePvalues, method="z.transform")
combine.test(p=pSimObsFlarentPvaluesEdited, method="z.transform") ###Change to small float value
combine.test(p=pSimObsFlaretPvalues, method="z.transform")
combine.test(p=pSimObsPostflarePvalues, method="z.transform")
hist(pSimObsControlPvalues, 100)
hist(pSimObsBaselinePvalues, 100)
hist(pSimObsFlarentPvalues, 100)
hist(pSimObsFlaretPvalues, 100)
hist(pSimObsPostflarePvalues, 100)
combine.test(p=sSimObsControlPvaluesEdited, method="z.transform")
combine.test(p=sSimObsBaselinePvaluesEdited, method="z.transform")
combine.test(p=sSimObsFlarentPvaluesEdited, method="z.transform")
combine.test(p=sSimObsFlaretPvaluesEdited, method="z.transform")
combine.test(p=sSimObsPostflarePvaluesEdited, method="z.transform")
hist(sSimObsControlPvalues, 100)
hist(sSimObsBaselinePvalues, 100)
hist(sSimObsFlarentPvalues, 100)
hist(sSimObsFlaretPvalues, 100)
hist(sSimObsPostflarePvalues, 100)
combine.test(p=d2LSCpValuesEdited, method="z.transform")
hist(d2LSCpValuesEdited, 100)
combine.test(p=d4LSCCpValuesEdited, method="z.transform")
hist(d4LSCCpValuesEdited, 100)
combine.test(p=d4LSCEpValues, method="z.transform")
hist(d4LSCEpValues, 100)
save(LSCED4, file="LSCED4Pub.RData")
load("~/data sim/ADdata/validation/NewValidation/10000SimulatedDatasets/MicroSimValidationDatasetsALL28APR2014.RData")
View(LSCCD4)
View(LSCED4)
View(LSCCD4)
setwd("~/data sim/ADdata/validation/NewValidation/10000SimulatedDatasets/Tables for retroBiome")
write.table(LSCCED2, "RatWoundGenusDay2Baseline.txt", sep = ",")
write.table(LSCCD4, "RatWoundGenusControlsD4.txt", sep=",")
write.table(LSCCED2, "RatWoundGenusDay2Baseline_CbyS.txt", sep = ",")
write.table(LSCCD4, "RatWoundGenusControlsD4_CbyS.txt", sep=",")
write.table(LSCED4, "RatWoundGenusExperimentalD4_CbyS.txt", sep=",")
library(HMP)
DM.MoM(d2LSCsorted)
DM.MoM(LSCCED2)
DM.MoM(LSCCED2)$pi
View(DM.MoM(LSCCED2)$pi)
View(DM.MoM(d2LSCsorted))
View(DM.MoM(d2LSCsorted)$pi)
View(DM.MoM(pLSCCED2)$pi)
View(DM.MoM(LSCCED2)$pi)
getPercent <- function(data){
data <- as.matrix(data)
Rsum <- apply(data,1,sum)
rows <- dim(data)[1]
percentData <- matrix(nrow=dim(data)[1], ncol=dim(data)[2],dimnames=dimnames(data ))
for(i in 1:rows){
percentData[i,] <- data[i,]/Rsum[i]
}
return(percentData)
}
getPercent(LSCCED2)
DM.MoM(getPercent(LSCCED2))
DM.MoM(getPercent(LSCCED2)$pi)
apply(LSCCED2, 1, sum)
LSCCED2[1]
LSCCED2[1]/apply(LSCCED2, 1, sum)[1]
LSCCED2[,1]
LSCCED2[1,]
LSCCED2[1,]/apply(LSCCED2, 1, sum)[1]
View(LSCCED2[1,]/apply(LSCCED2, 1, sum)[1])
DM.MoM
View(DM.MoM(d2LSCsorted*3000)$pi)
View(DM.MoM(LSCCED2)$pi)
View(DM.MoM(d2LSCsorted*3000)$pi)
sum(LSCCED2[1,]/apply(LSCCED2, 1, sum)[1])
load("~/data sim/ADdata/validation/NewValidation/10000SimulatedDatasets/MicroSimValidationDatasetsALL28APR2014.RData")
View(ADControl500)
View(ADControl500Reads)
load("~/data sim/ADdata/validation/NewValidation/10000SimulatedDatasets/MicroSimValidationDatasetsALL28APR2014.RData")
apply(LSCCED2, 2, sd)
View(apply(LSCCED2, 2, sd))
d2LSCsorted
vLSCCD4[[1]]
vLSCCED2[[1]]
apply(d2LSCsorted, 2, sd)
apply(d2LSCsorted, 2, mean)
View(`d2LSCsorted`)
View(`d4LSCCsorted`)
View(`d4LSCEsorted`)
sum(apply(d2LSCsorted, 2, mean))
cbind(apply(d2LSCsorted, 2, mean),apply(d2LSCsorted, 2, mean))
mean <- apply(d2LSCsorted, 2, mean)
sd <- apply(d2LSCsorted, 2, sd)
cbind(mean, sd)
View(cbind(mean, sd))
apply(LSCCED2, 1, sum)
apply(LSCCED2, 2, sum)
View(apply(LSCCED2, 2, sum))
LSCCED2COrder <- LSCCED2[,order(colSums(LSCCED2), decreasing=TRUE)]
View(LSCCED2COrder)
apply(data,1,sum)
apply(LSCCED2, 1, sum)
apply(LSCCED2, 1, sum)[1]
getPercent <- function(data){
data <- as.matrix(data)
Rsum <- apply(data,1,sum)
rows <- dim(data)[1]
percentData <- matrix(nrow=dim(data)[1], ncol=dim(data)[2],dimnames=dimnames(data ))
for(i in 1:rows){
for(k in 1:rows)
percentData[k,] <- data[k,]/Rsum[i]
}
return(percentData)
}
getPercent(LSCCED2)
View(getPercent(LSCCED2))
getPercent <- function(data){
data <- as.matrix(data)
Rsum <- apply(data,1,sum)
rows <- dim(data)[1]
percentData <- matrix(nrow=dim(data)[1], ncol=dim(data)[2],dimnames=dimnames(data ))
for(i in 1:rows){
for(k in 1:rows){
percentData[k,] <- data[k,]/Rsum[i]
}
}
return(percentData)
}
View(getPercent(LSCCED2))
LSCCED2[1,2]
View(LSCCED2)
View(LSCCED2)/apply(LSCCED2,1,sum)[1]
LSCCED2[1,2]/apply(LSCCED2,1,sum)[1]
apply(LSCCED2,1,sum)
apply(LSCCED2,1,sum)[1]
apply(LSCCED2,1,sum)[2]
length(apply(LSCCED2,1,sum))
getPercent <- function(data){
data <- as.matrix(data)
Rsum <- apply(data,1,sum)
rows <- dim(data)[1]
Rlength <- length(Rsum)
percentData <- matrix(nrow=dim(data)[1], ncol=dim(data)[2],dimnames=dimnames(data ))
for(i in 1:rows){
for(k in 1:rows){
percentData[k,] <- data[k,]/Rsum[i]
}
}
return(percentData)
}
getPercent(LSCCED2)
View(getPercent(LSCCED2))
getPercent <- function(data){
data <- as.matrix(data)
Rsum <- apply(data,1,sum)
col <- dim(data)[2]
Rlength <- length(Rsum)
percentData <- matrix(nrow=dim(data)[1], ncol=dim(data)[2],dimnames=dimnames(data ))
for(i in 1:Rlength){
for(k in 1:col){
percentData[,k] <- data[,k]/Rsum[i]
}
}
return(percentData)
}
View(getPercent(LSCCED2))
load("~/data sim/ADdata/validation/NewValidation/10000SimulatedDatasets/MicroSimValidationDatasetsALL28APR2014.RData")
LSCCD4[1,]
View(LSCCD4[1,])
sum(LSCCED2[1,])
ViewLSCCED2[1,]/sum(LSCCED2[1,]))
View(LSCCED2[1,]/sum(LSCCED2[1,]))
getPercent <- function(data){
data <- as.matrix(data)
#Rsum <- apply(data,1,sum)
rows <- dim(data)[1]
percentData <- matrix(nrow=dim(data)[1], ncol=dim(data)[2],dimnames=dimnames(data ))
for(i in 1:rows){
percentData[i,] <- data[i,]/sum(data[1,])
}
return(percentData)
}
getPercent(LSCCED2)
View(getPercent(LSCCED2))
LSCCED2COrder <- LSCCED2[,order(colSums(LSCCED2), decreasing=TRUE)]
View(getPercent(LSCCED2))
View(getPercent(LSCCED2COrder))
load("~/Rat Data/R/R/ValidationForRatSim/ValidationWorkspaceRatDataGenus.RData")
View(LSCCED2)
library(HMP)
View(DM.MoM(LSCCED2)$pi)
View(DM.MoM(d2LSCsorted)$pi)
load("~/Rat Data/R/R/RatDataWorkspace07MAR2014.RData")
getPercent <- function(data){
data <- as.matrix(data)
rows <- dim(data)[1]
percentData <- matrix(nrow=dim(data)[1], ncol=dim(data)[2],dimnames=dimnames(data ))
for(i in 1:rows){
percentData[i,] <- data[i,]/sum(data[1,])
}
return(percentData)
}
pLsericataD2 <- getPercent(LsericataD2)
View(pLsericataD2)
View(DM.MoM(pLsericataD2)$pi)
setwd("~/Rat Data/R/R")
setwd("~/Rat Data/R/R")
write.table(x=pLsericataD2, file="LSCCED2.txt", sep=",")
pLSCCD4 <- getPercent(LSCCD4)
apply(pLSCCD4, 1, sum)
View(pLSCCD4)
apply(pLsericataD2, 1, sum)
getPercent <- function(data){
data <- as.matrix(data)
rows <- dim(data)[1]
percentData <- matrix(nrow=dim(data)[1], ncol=dim(data)[2],dimnames=dimnames(data ))
for(i in 1:rows){
percentData[i,] <- data[i,]/sum(data[i,])
}
return(percentData)
}
pLsericataD2 <- getPercent(LsericataD2)
apply(pLsericataD2, 1, sum)
write.table(x=pLsericataD2, file="LSCCED2.txt", sep=",")
pLSCCD4 <- getPercent(LSCCD4)
apply(pLSCCD4, 1, sum)
write.table(x=pLSCCD4, file="LSCCD4.txt", sep=",")
pLSCED4 <- getPercent(LSCED4)
apply(pLSCED4,1,sum)
write.table(x=pLSCED4, file="LSCED4.txt", sep=",")
apply(pLsericataD2,2,mean)
apply(pLsericataD2,2,sd)
library(HMP)
library(PearsonDS)
set.seed(1234)
d2LSCsorted <- pLsericataD2[,order(colSums(pLsericataD2), decreasing=TRUE)]
View(d2LSCsorted)
d4LSCCsorted <- pLSCCD4[,order(colSums(pLSCCD4), decreasing=TRUE)]
d4LSCEsorted <- pLSCED4[,order(colSums(pLSCED4), decreasing=TRUE)]
View(d4LSCCsorted)
View(d4LSCEsorted)
vLSCCED2 <- validationdatasets(rawData=pLsericataD2, numberSubjects=11, numberSimulations=10000, reads=3000)
vLSCCD4 <- validationdatasets(rawData=pLSCCD4, numberSubjects=4, numberSimulations=10000, reads=3000)
vLSCED4 <- validationdatasets(rawData=pLSCED4, numberSubjects=8, numberSimulations=10000, reads=3000)
pLSCCED2 <- pLsericataD2
rm(pLsericataD2)
setwd("~/Rat Data/R/R/ValidationForRatSim")
save.image("~/Rat Data/R/R/ValidationForRatSim/ValidationWorkspaceRatDataGenus19JUN2014.RData")
save(vLSCCED2, "vLSCCED219JUN2014.RData")
d2LSCpValues <- meanVarCheckPvalues(simlist=vLSCCED2, observedData=d2LSCsorted, reads=3000)
mean(d2LSCpValues)
length(which(d2LSCpValues > 0.05))/length(d2LSCpValues)
d4LSCCpValues <- meanVarCheckPvalues(simlist=vLSCCD4, observedData=d4LSCCsorted, reads=3000)
mean(d4LSCCpValues)
length(which(d4LSCCpValues > 0.05))/length(d4LSCCpValues)
d4LSCEpValues <- meanVarCheckPvalues(simlist=vLSCED4, observedData=d4LSCEsorted, reads=3000)
mean(d4LSCEpValues)
length(which(d4LSCEpValues > 0.05))/length(d4LSCCpValues)
d2LSCpValuesEdited <- d2LSCpValues
d2LSCpValuesEdited[d2LSCpValuesEdited == 0] <- 0.000000000000001
combine.test(p=d2LSCpValuesEdited, method="z.transform")
library(survcomp)
combine.test(p=d2LSCpValuesEdited, method="z.transform")
hist(d2LSCpValuesEdited, 100)
d4LSCCpValuesEdited <- d4LSCCpValues
d4LSCCpValuesEdited[d4LSCCpValuesEdited == 0] <- 0.000000000000001
combine.test(p=d4LSCCpValuesEdited, method="z.transform")
hist(d4LSCCpValuesEdited, 100)
combine.test(p=d4LSCEpValues, method="z.transform")
hist(d4LSCEpValues, 100)
save(LSCCD4, file="LSCCD4Pub.RData")
save(LSCED4, file="LSCED4Pub.RData")
save(LSCCED2, file="LSCCED2Pub.RData")
LSCCED2 <- LsericataD2
save(LSCCED2, file="LSCCED2Pub.RData")
save(pLSCCD4, file="pLSCCD4.RData")
save(pLSCED4, file="pLSCED4.RData")
pLSCCED2 <- pLsericataD2
save(pLSCCED2, file="pLSCCED2.RData")
save(d2LSCsorted, file="d2LSCsorted.RData")
save(d4LSCCsorted, file="d4LSCCsorted.RData")
save(d4LSCEsorted, file="d4LSCEsorted.RData")
save(vLSCCD4, file="vLSCCD4.RData")
save(vLSCCED2, file="vLSCCED2.RData")
save(vLSCED4, file="vLSCED4.RData")
save.image("~/Rat Data/R/R/ValidationForRatSim/ValidationWorkspaceRatDataGenus19JUN2014.RData")
load("~/data sim/ADdata/validation/NewValidation/10000SimulatedDatasets/MicroSimValidationDatasetsALL28APR2014.RData")
setwd("~/data sim/ADdata/validation/NewValidation/10000SimulatedDatasets")
save.image("~/data sim/ADdata/validation/NewValidation/10000SimulatedDatasets/MicroSimValidationDatasetsALL19JUN2014.RData")
LSCCED2[,order(colSums(LSCCED2), decreasing=TRUE)]
LSCCD4[,order(colSums(LSCCD4), decreasing=TRUE)]
LSCCED2COrder <- LSCCED2[,order(colSums(LSCCED2), decreasing=TRUE)]
LSCCD4COrder <- LSCCD4[,order(colSums(LSCCD4), decreasing=TRUE)]
LSCED4COrder <- LSCED4[,order(colSums(LSCED4), decreasing=TRUE)]
save.image("~/data sim/ADdata/validation/NewValidation/10000SimulatedDatasets/MicroSimValidationDatasetsALL19JUN2014.RData")
DM.MoM(LSCCED2COrder,1,mean)
DM.MoM(LSCCED2COrder)$pi
View(DM.MoM(LSCCED2COrder)$pi)
View(DM.MoM(pLSCCED2)$pi)
View(DM.MoM(d2LSCsorted)$pi)
load("~/Rat Data/R/R/ValidationForRatSim/ValidationWorkspaceRatDataGenus19JUN2014.RData")
LSCCED2COrder <- LSCCED2[,order(colSums(LSCCED2), decreasing=TRUE)]
LSCCD4COrder <- LSCCD4[,order(colSums(LSCCD4), decreasing=TRUE)]
LSCED4COrder <- LSCED4[,order(colSums(LSCED4), decreasing=TRUE)]
View(DM.MoM(LSCCED2COrder)$pi)
View(DM.MoM(d2LSCsorted)$pi)
View(DM.MoM(pLSCCED2)$pi)
d2LSCsorted <- pLSCCED2[,order(colSums(pLSCCED2), decreasing=TRUE)]
View(DM.MoM(d2LSCsorted)$pi)
LSCCED2COrder[1,]/sum(LSCCED2COrder)[1,]
LSCCED2COrder[1,]/sum(LSCCED2COrder[1,])
LSCCED2COrder[2,]/sum(LSCCED2COrder[2,])
write.table(LSCCED2COrder, "LSCCED2COrder.txt", sep=",")
setwd("~/Rat Data/R/R/ValidationForRatSim")
write.table(LSCCED2COrder, "LSCCED2COrder.txt", sep=",")
View(DM.MoM(d2LSCsorted)$pi)
meanVarCheckPvalues
save.image("~/Rat Data/R/R/ValidationForRatSim/ValidationWorkspaceRatDataGenus19JUN2014.RData")
dirmult
setwd("~/data sim/ADdata/validation/NewValidation/10000SimulatedDatasets/Tables for retroBiome")
apply(d2LSCsorted,2,mean)
apply(d2LSCsorted,2,sd)
View(apply(d2LSCsorted,2,mean))
load("~/data sim/ADdata/validation/NewValidation/10000SimulatedDatasets/MicroSimValidationDatasetsALL19JUN2014.RData")
apply(d2LSCsorted,2,mean)
apply(d2LSCsorted,2,sd)
apply(d4LSCCsorted,2,mean)
apply(d4LSCCsorted,2,sd)
apply(d4LSCEsorted,2,mean)
apply(d4LSCEsorted,2,mean)
setwd("~/data sim/ADdata/validation/NewValidation/10000SimulatedDatasets/Tables for retroBiome")
mean <- apply(d2LSCsorted,2,mean)
sd <- apply(d2LSCsorted,2,sd)
cbind(mean, sd)
write.table(LSCCED2COrder, "RatWoundGenusBaselineD2_CbyS.txt", sep = ",")
write.table(LSCCD4COrder, "RatWoundGenusControlsD4_CbyS.txt", sep=",")
write.table(LSCED4COrder, "RatWoundGenusExperimentalD4_CbyS.txt", sep=",")
write.table(cbind(mean, sd), "RatWoundGenusBaselineD2MeanSD.txt", sep=",")
mean <- apply(d4LSCCsorted,2,mean)
sd <- apply(d4LSCCsorted,2,sd)
write.table(cbind(mean, sd), "RatWoundGenusControlsD4MeanSD.txt", sep=",")
mean <- apply(d4LSCEsorted,2,mean)
sd <- apply(d4LSCEsorted,2,mean)
write.table(cbind(mean, sd), "RatWoundGenusExperiementalD4MeanSD.txt", sep=",")
getBetaParams
collectParameters
save.image("~/data sim/ADdata/validation/NewValidation/10000SimulatedDatasets/MicroSimValidationDatasetsALL25JUN2014.RData")
