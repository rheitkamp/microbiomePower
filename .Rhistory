colsize <- dim(x)[2]
dims <- dimnames(x)
for(i in 1:rowsize){
total <- apply(X=x,MARGIN=1,sum)
y[i,1] <- x[i,1]/100
total <- total - x[i,1]
for(k in 2:colsize){
y[1,k] <- x[1,k]/ total
total <- total - x[1,k]
}
}
return(matrix(y,nrow=rowsize, ncol=colsize, dimnames=dims))
}
Premainder(a, y)
View(y)
PR <- Premainder(a,y)
View(PR)
Premainder <- function(x) {
rowsize <- dim(x)[1]
colsize <- dim(x)[2]
dims <- dimnames(x)
for(i in 1:rowsize){
total <- apply(X=x,MARGIN=1,sum)
y[i,1] <- x[i,1]/100
total <- total - x[i,1]
for(k in 2:colsize){
y[1,k] <- x[1,k]/ total
total <- total - x[1,k]
}
}
return(matrix(y,nrow=rowsize, ncol=colsize, dimnames=dims))
}
PR <- Premainder(a)
View(PR)
PR1 <- Premainder(a)
View(PR1)
Premainder <- function(x) {
for(i in 1:rowsize){
total <- apply(X=x,MARGIN=1,sum)
y[i,1] <- x[i,1]/100
total <- total - x[i,1]
for(k in 2:colsize){
y[1,k] <- x[1,k]/ total
total <- total - x[1,k]
}
}
return(matrix(y,nrow=rowsize, ncol=colsize, dimnames=dims))
}
PR2 <- Premainder(a)
View(PR2)
Premainder <- function(x) {
for(i in 1:rowsize){
total <- apply(X=x,MARGIN=1,sum)
y[i,1] <- x[i,1]/100
total <- total - x[i,1]
for(k in 2:colsize){
y[1,k] <- x[1,k]/ total
total <- total - x[1,k]
}
}
return(matrix(y,nrow=rowsize, ncol=colsize, dimnames=dims))
}
PR2 <- Premainder(a)
Premainder <- function(x) {
rowsize <- dim(a)[1]
colsize <- dim(a)[2]
for(i in 1:rowsize){
total <- apply(X=x,MARGIN=1,sum)
y[i,1] <- x[i,1]/100
total <- total - x[i,1]
for(k in 2:colsize){
y[1,k] <- x[1,k]/ total
total <- total - x[1,k]
}
}
return(matrix(y,nrow=rowsize, ncol=colsize, dimnames=dims))
}
PR2 <- Premainder(a)
a <- read.table("UpperRmean.txt")
PR2 <- Premainder(a)
Premainder <- function(x) {
rowsize <- dim(a)[1]
colsize <- dim(a)[2]
y <- matrix(nrow=rowsize, ncol=colsize, dimnames=dims)
for(i in 1:rowsize){
total <- apply(X=x,MARGIN=1,sum)
y[i,1] <- x[i,1]/100
total <- total - x[i,1]
for(k in 2:colsize){
y[1,k] <- x[1,k]/ total
total <- total - x[1,k]
}
}
return(matrix(y,nrow=rowsize, ncol=colsize, dimnames=dims))
}
PR2 <- Premainder(a)
Premainder <- function(x) {
rowsize <- dim(a)[1]
colsize <- dim(a)[2]
dims <- dimnames(a)
y <- matrix(nrow=rowsize, ncol=colsize, dimnames=dims)
for(i in 1:rowsize){
total <- apply(X=x,MARGIN=1,sum)
y[i,1] <- x[i,1]/100
total <- total - x[i,1]
for(k in 2:colsize){
y[1,k] <- x[1,k]/ total
total <- total - x[1,k]
}
}
return(matrix(y,nrow=rowsize, ncol=colsize, dimnames=dims))
}
PR2 <- Premainder(a)
View(PR2)
b <- read.table("ADControlsData.txt")
View(b)
View(a)
View(PR2)
fix(Premainder)
Premainder(a)
Fall <- Premainder(a)
View(Fall)
View(b)
c <- read.tabke("ADControlsData.txt")
c <- read.table("ADControlsData.txt")
AD <- Premainder(c)
Premainder <- function(x) {
rowsize <- dim(x)[1]
colsize <- dim(x)[2]
dims <- dimnames(x)
y <- matrix(nrow=rowsize, ncol=colsize, dimnames=dims)
for(i in 1:rowsize){
total <- apply(X=x,MARGIN=1,sum)
y[i,1] <- x[i,1]/100
total <- total - x[i,1]
for(k in 2:colsize){
y[1,k] <- x[1,k]/ total
total <- total - x[1,k]
}
}
return(matrix(y,nrow=rowsize, ncol=colsize, dimnames=dims))
}
AD <- Premainder(c)
write.table(x=b,file="ADControldata.csv")
View(c)
View(a)
Premainder <- function(x) {
rowsize <- dim(x)[1]
colsize <- dim(x)[2]
dims <- dimnames(x)
y <- matrix(nrow=rowsize, ncol=colsize, dimnames=dims)
for(i in 1:rowsize){
total <- apply(X=x,MARGIN=1,sum)[i]
y[i,1] <- x[i,1]/100
total <- total - x[i,1]
for(k in 2:colsize){
y[1,k] <- x[1,k]/ total
total <- total - x[1,k]
}
}
return(matrix(y,nrow=rowsize, ncol=colsize, dimnames=dims))
}
AD <- Premainder(c)
View(AD)
c <- read.table("ADControlP.txt")
View(c)
AD <- Premainder(c)
View(AD)
Premainder <- function(x) {
rowsize <- dim(x)[1]
colsize <- dim(x)[2]
dims <- dimnames(x)
y <- matrix(nrow=rowsize, ncol=colsize, dimnames=dims)
for(i in 1:rowsize){
total <- apply(X=x,MARGIN=1,sum)
y[i,1] <- x[i,1]/100
total <- total - x[i,1]
for(k in 2:colsize){
y[1,k] <- x[1,k]/ total
total <- total - x[1,k]
}
}
return(matrix(y,nrow=rowsize, ncol=colsize, dimnames=dims))
}
AD <- Premainder(c)
apply(X=c,MARGIN=1,sum)[1]
apply(X=c,MARGIN=1,sum)[2]
rowsize <- dim(x)[1]
rowsize <- dim(c)[1]
colsize <- dim(c)[2]
dims <- dimnames(c)
y <- matrix(nrow=rowsize, ncol=colsize, dimnames=dims)
y[1,1] <- c[1,1]/100
View(y)
total <- apply(X=c,MARGIN=1,sum)[1]
total <- total - c[1,1]
fix(total)
fix(total)
y[1,2] <- c[1,2]/ total
View(y)
total <- total - c[1,2]
total <- apply(X=c,MARGIN=1,sum)[2]
y[2,1] <- c[2,1]/100
total <- total - c[2,1]
View(y)
Premainder <- function(x) {
rowsize <- dim(x)[1]
colsize <- dim(x)[2]
dims <- dimnames(x)
y <- matrix(nrow=rowsize, ncol=colsize, dimnames=dims)
for(i in 1:rowsize){
total <- apply(X=x,MARGIN=1,sum)[i]
y[i,1] <- x[i,1]/100
total <- total - x[i,1]
for(k in 2:colsize){
y[1,k] <- x[1,k]/ total
total <- total - x[1,k]
}
}
return(matrix(y,nrow=rowsize, ncol=colsize, dimnames=dims))
}
Premainder <- function(x) {
rowsize <- dim(x)[1]
colsize <- dim(x)[2]
dims <- dimnames(x)
y <- matrix(nrow=rowsize, ncol=colsize, dimnames=dims)
for(i in 1:rowsize){
total <- apply(X=x,MARGIN=1,sum)[i]
y[i,1] <- x[i,1]/100
total <- total - x[i,1]
for(k in 2:colsize){
y[1,k] <- x[1,k]/ total
total <- total - x[1,k]
}
}
return(y)
}
Premainder(c)
Premainder(a)
colsize <- dim(c)[2]
library(HMP)
data(throat)
data(tonsils)
Gp1=throat
Gp2=tonsils
comb=rbind(Gp1,Gp2)
View(comb)
index=which(colSums(comb)==0)
fix(index)
fix(index)
colSums(comb)
colSums(comb)==0
which(colSums(comb)==0)
length(index)>0
Gp1=Gp1[,-index]
Gp1=throat
Gp1[,-index]
Gp2[,-index]
Gp2
-index
Gp1=throat
Gp2=tonsils
comb=rbind(Gp1,Gp2)
index=which(colSums(comb)==0)
if(length(index)>0){
Gp1=Gp1[,-index]
Gp2=Gp2[,-index]
}
list(Gp1,Gp2)
mygroup <- list(Gp1,Gp2)
names(mygroup)<-c('throat','tonsils')
fix(mygroup)
mygroup
Sites.pi.MoM=do.call(rbind,lapply(mygroup,function(x) DM.MoM(x)$pi))
View(Sites.pi.MoM)
Sites.pi.MoM=Sites.pi.MoM[,order(abs(Sites.pi.MoM[1,]-Sites.pi.MoM[2,]),decreasing=T)]
Sites.pi.MoM=do.call(rbind,lapply(mygroup,function(x) DM.MoM(x)$pi))
Sites.pi.MoM
Sites.pi.MoM=Sites.pi.MoM[,order(abs(Sites.pi.MoM[1,]-Sites.pi.MoM[2,]),decreasing=T)]
Sites.pi.MoM
matplot(t(Sites.pi.MoM),type='o',pch=19,axes="FALSE", ann="FALSE",col=c('blue','red'),ylim=c(-0.25,0.6))
y=colnames(Sites.pi.MoM)
colnames(Sites.pi.MoM)
nc=dim((Sites.pi.MoM))[2]
dim((Sites.pi.MoM))[2]
axis(1,at=1:nc, lab=F, hadj=3,pos=-0.009)
text(1:nc,-0.02, srt=90,adj=1,labels=y,xpd=T, cex=1)
axis(2, las=1, at=seq(0,0.6,0.05))
legend("topright",legend=c(rownames(Sites.pi.MoM)), cex=0.8, col=c('blue','red'), bty="n",pch=19)
text(-1.5,0.01,srt=90,adj=-1,labels='Taxa Abundance',xpd=T, cex=1)
DM.MoM(Gp1)
DM.MoM(Gp2)
fit1=DM.MoM(Gp1)
fit2=DM.MoM(Gp2)
apply(Gp1,1,sum)
fit1$reads=apply(Gp1,1,sum)
fit2$reads=apply(Gp2,1,sum)
pioest(fit1,fit2)
fit2$reads=apply(Gp2,1,sum)
fit2=DM.MoM(Gp2)
pioest(fit1,fit2)
pio=pioest(fit1,fit2)
fit1=DM.MoM(Gp1)
fit2=DM.MoM(Gp2)
fit1$reads=apply(Gp1,1,sum)
fit2$reads=apply(Gp2,1,sum)
pio=pioest(fit1,fit2)
group.fit <- list(fit1,fit2)
pio=pioest(group.fit)
pioest(fit1)
group.data <- list(saliva,throat)
pioest(group.data)
Premainder <- function(x) {
rowsize <- dim(x)[1]
colsize <- dim(x)[2]
dims <- dimnames(x)
y <- matrix(nrow=rowsize, ncol=colsize, dimnames=dims)
for(i in 1:rowsize){
total <- apply(X=x,MARGIN=1,sum)[i]
y[i,1] <- x[i,1]/100
total <- total - x[i,1]
for(k in 2:colsize){
y[1,k] <- x[1,k]/ total
total <- total - x[1,k]
}
repeat
}
return(matrix(y,nrow=rowsize, ncol=colsize, dimnames=dims))
}
c <- read.table("ADControlP.txt")
rowsize <- dim(c)[1]
colsize <- dim(c)[2]
dims <- dimnames(c)
y <- matrix(nrow=rowsize, ncol=colsize, dimnames=dims)
for(i in 1:rowsize){
total <- apply(X=c,MARGIN=1,sum)[i]
y[i,1] <- c[i,1]/100
total <- total - c[i,1]
for(k in 2:colsize){
y[1,k] <- c[1,k]/total
total <- total - c[1,k]
}
}
View(y)
b <- read.table("ADControldata.csv")
rowsize <- dim(b)[1]
colsize <- dim(b)[2]
dims <- dimnames(b)
PR <- matrix(nrow=rowsize, ncol=colsize, dimnames=dims)
for(i in 1:colsize){
total <- apply(X=b, MARGIN=2, sum)[i]
PR[1,i] <- b[1,i]
total <- total - b[1,i]
for(k in 2:rowsize){
PR[k,i] <- b[k,i]/total
total <- total - b[k,i]
}
}
View(b)
dim(c)[2]
View(y)
View(b)
Premainder <- function(x) {
rowsize <- dim(x)[1]
colsize <- dim(x)[2]
dims <- dimnames(x)
y <- matrix(nrow=rowsize, ncol=colsize, dimnames=dims)
for(i in 1:rowsize){
total <- apply(X=x,MARGIN=1,sum)[i]
y[i,1] <- x[i,1]/100
total <- total - x[i,1]
for(k in 2:colsize){
y[1,k] <- x[1,k]/ total
total <- total - x[1,k]
}
}
return(matrix(y,nrow=rowsize, ncol=colsize, dimnames=dims))
}
a <- read.table("UpperRmean.txt")
a <- read.table("UpperRFall.txt")
Premainder(a)
ADPreaminder <- function(b){
rowsize <- dim(b)[1]
colsize <- dim(b)[2]
dims <- dimnames(b)
PR <- matrix(nrow=rowsize, ncol=colsize, dimnames=dims)
for(i in 1:colsize){
total <- apply(X=b, MARGIN=2, sum)[i]
PR[1,i] <- b[1,i]
total <- total - b[1,i]
for(k in 2:rowsize){
PR[k,i] <- b[k,i]/total
total <- total - b[k,i]
}
}
}
ADPreaminder(b)
ADPreaminder <- function(b){
rowsize <- dim(b)[1]
colsize <- dim(b)[2]
dims <- dimnames(b)
PR <- matrix(nrow=rowsize, ncol=colsize, dimnames=dims)
for(i in 1:colsize){
total <- apply(X=b, MARGIN=2, sum)[i]
PR[1,i] <- b[1,i]
total <- total - b[1,i]
for(k in 2:rowsize){
PR[k,i] <- b[k,i]/total
total <- total - b[k,i]
}
}
return(matrix(PR))
}
ADPreaminder(b)
rowsize <- dim(c)[1]
colsize <- dim(c)[2]
dims <- dimnames(c)
y <- matrix(nrow=rowsize, ncol=colsize, dimnames=dims)
for(i in 1:rowsize){
total <- apply(X=c,MARGIN=1,sum)[i]
y[i,1] <- c[i,1]/100
total <- total - c[i,1]
for(k in 2:colsize){
y[i,k] <- c[i,k]/total
total <- total - c[i,k]
}
}
View(y)
View(b)
groupfit <- list(fit1$reads, fit2$reads)
pio <- pioest(groupfit)
fix(groupfit)
Premainder(a)
Premainder(c)
Premainder <- function(x) {
rowsize <- dim(x)[1]
colsize <- dim(x)[2]
dims <- dimnames(x)
y <- matrix(nrow=rowsize, ncol=colsize, dimnames=dims)
for(i in 1:rowsize){
total <- apply(X=x,MARGIN=1,sum)[i]
y[i,1] <- x[i,1]/100
total <- total - x[i,1]
for(k in 2:colsize){
y[i,k] <- x[i,k]/ total
total <- total - x[i,k]
}
}
return(matrix(y,nrow=rowsize, ncol=colsize, dimnames=dims))
}
Premainder(c)
getBetaParams <- function(mean, sd) {
m <- (1-mean)/mean
n <- 1 + m
alpha <- (1/n)*(m/(sd^2*n^2)-1)
beta <- m * alpha
params <- c(alpha, beta)
return(a,b)
}
getBetaParams(25,5)
getBetaParams(.25,.5)
getBetaParams <- function(mean, sd) {
m <- (1-mean)/mean
n <- 1 + m
alpha <- (1/n)*(m/(sd^2*n^2)-1)
beta <- m * alpha
params <- c(alpha, beta)
return(alpha,beta)
}
getBetaParams(.25,.5)
getBetaParams <- function(mean, sd) {
m <- (1-mean)/mean
n <- 1 + m
alpha <- (1/n)*(m/(sd^2*n^2)-1)
beta <- m * alpha
params <- c(alpha, beta)
return(params)
}
getBetaParams <- function(mean, sd) {
m <- (1-mean)/mean
n <- 1 + m
alpha <- (1/n)*(m/(sd^2*n^2)-1)
beta <- m * alpha
params <- c(a=alpha, b=beta)
return(params)
}
getBetaParams(.25,.5)
getBetaParams(.75,.23)
Proto <- getBetaParams(.75,.23)
library(PearsonDS)
getBetaDist <- function(mean, sd) {
m <- (1-mean)/mean
n <- 1 + m
alpha <- (1/n)*(m/(sd^2*n^2)-1)
beta <- m * alpha
betadist <- rpearsonI(n=1,a=alpha,b=beta,location=0,scale=1)
return(betadist)
}
getBetaDist(.75,.23)
getBetaRand <- function(mean, sd) {
m <- (1-mean)/mean
n <- 1 + m
alpha <- (1/n)*(m/(sd^2*n^2)-1)
beta <- m * alpha
betadist <- rpearsonI(n=1,a=alpha,b=beta,location=0,scale=1)
return(betadist)
}
getBetaRand(.75,.23)
getBetaRand(.75,.23)
getBetaRand(.75,.23)
getBetaRand(.75,.23)
getBetaRand(.75,.23)
