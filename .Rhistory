length(which(pSimObsFlaretPvalues > 0.05))/length(pSimObsFlaretPvalues)
pSimObsPostflarePvalues <- meanVarCheckPvalues(simlist=pPostflareDatalist, observedData=ppostflare, reads=3000)
mean(pSimObsPostflarePvalues)
length(which(pSimObsPostflarePvalues > 0.05))/length(pSimObsPostflarePvalues)
combine.test(p=pSimObsControlPvalues, method="z.transform")
combine.test(p=pSimObsBaselinePvalues, method="z.transform")
pSimObsFlarentPvaluesEdited <- pSimObsFlarentPvalues
pSimObsFlarentPvaluesEdited[pSimObsFlarentPvaluesEdited == 0] <- 0.000000000000001
combine.test(p=pSimObsFlarentPvaluesEdited, method="z.transform") ###Change to small float value
combine.test(p=pSimObsFlaretPvalues, method="z.transform")
combine.test(p=pSimObsPostflarePvalues, method="z.transform")
hist(pSimObsControlPvalues, 100)
hist(pSimObsBaselinePvalues, 100)
hist(pSimObsFlarentPvalues, 100)
hist(pSimObsFlaretPvalues, 100)
hist(pSimObsPostflarePvalues, 100)
save.image("~/data sim/ADdata/validation/NewValidation/10000SimulatedDatasets/Phylum/ValidationWorkspacePhylum28APR2014.RData")
save(pSimObsControlPvalue, file="pSimObsControlPvalues.RData")
save(pSimObsControlPvalues, file="pSimObsControlPvalues.RData")
save(pSimObsBaselinePvalues, file="pSimObsBaselinePvalue.RData")
save(pSimObsFlarentPvalues, file="pSimObsFlarentPvalues.RData")
save(pSimObsFlaretPvalues, file="pSimObsFlaretPvalues.RData")
save(pSimObsPostflarePvalues, file="pSimObsPostflarePvalue.RData")
load("~/data sim/ADdata/validation/NewValidation/10000SimulatedDatasets/Species/RDataFiles (Species)/sBaselineDatalist.RData")
load("~/data sim/ADdata/validation/NewValidation/10000SimulatedDatasets/Species/ValidationForSpeciesSimWorkspace05MAR2014.RData")
setwd("~/data sim/ADdata/validation/NewValidation/10000SimulatedDatasets/Species")
save(sControlDatalist, file="sControlDatalist.RData")
save(sBaselineDatalist, file="sBaselineDatalist.RData")
save(sFlarentDatalist, file="sFlarentDatalist.RData")
save(sFlaretDatalist, file="sFlaretDatalist.RData")
save(sPostflareDatalist, file="sPostflareDatalist.RData")
load("~/data sim/ADdata/validation/NewValidation/10000SimulatedDatasets/Species/RDataFiles (Species)/SpeciesObservedDatasetsAD.RData")
load("~/data sim/ADdata/validation/NewValidation/10000SimulatedDatasets/Species/sBaselineDatalist.RData")
load("~/data sim/ADdata/validation/NewValidation/10000SimulatedDatasets/Species/sControlDatalist.RData")
load("~/data sim/ADdata/validation/NewValidation/10000SimulatedDatasets/Species/sFlarentDatalist.RData")
load("~/data sim/ADdata/validation/NewValidation/10000SimulatedDatasets/Species/sFlaretDatalist.RData")
load("~/data sim/ADdata/validation/NewValidation/10000SimulatedDatasets/Species/sPostflareDatalist.RData")
sSimObsControlPvalues <- meanVarCheckPvalues(simlist=sControlDatalist, observedData=scontrol, reads=3000)
meanVarCheckPvalues <- function(simlist, observedData, reads){
observedData <- round(observedData*reads)
listLength <- length(simlist)
pValues <- numeric(length=listLength)
for(i in 1:listLength){
pValues[i] <- Xdc.sevsample(list(simlist[[i]], observedData))$'p value'
}
return(pValues)
}
sSimObsControlPvalues <- meanVarCheckPvalues(simlist=sControlDatalist, observedData=scontrol, reads=3000)
mean(sSimObsControlPvalues)
length(which(sSimObsControlPvalues > 0.05))/length(sSimObsControlPvalues)
sSimObsBaselinePvalues <- meanVarCheckPvalues(simlist=sBaselineDatalist, observedData=sbaseline, reads=3000)
mean(sSimObsBaselinePvalues)
length(which(sSimObsBaselinePvalues > 0.05))/length(sSimObsBaselinePvalues)
sSimObsFlarentPvalues <- meanVarCheckPvalues(simlist=sFlarentDatalist, observedData=sflarent, reads=3000)
mean(sSimObsFlarentPvalues)
length(which(sSimObsFlarentPvalues > 0.05))/length(sSimObsFlarentPvalues)
sSimObsFlaretPvalues <- meanVarCheckPvalues(simlist=sFlaretDatalist, observedData=sflaret, reads=3000)
mean(sSimObsFlaretPvalues)
length(which(sSimObsFlaretPvalues > 0.05))/length(sSimObsFlaretPvalues)
sSimObsPostflarePvalues <- meanVarCheckPvalues(simlist=sPostflareDatalist, observedData=spostflare, reads=3000)
mean(sSimObsPostflarePvalues)
length(which(sSimObsPostflarePvalues > 0.05))/length(sSimObsPostflarePvalues)
sSimObsControlPvaluesEdited <- sSimObsControlPvalues
sSimObsControlPvaluesEdited[sSimObsControlPvaluesEdited == 0] <- 0.000000000000001
combine.test(p=sSimObsControlPvaluesEdited, method="z.transform")
sSimObsBaselinePvaluesEdited <- sSimObsBaselinePvalues
sSimObsBaselinePvaluesEdited[sSimObsBaselinePvaluesEdited == 0] <- 0.000000000000001
combine.test(p=sSimObsBaselinePvaluesEdited, method="z.transform")
sSimObsFlarentPvaluesEdited <- sSimObsFlarentPvalues
sSimObsFlarentPvaluesEdited[sSimObsFlarentPvaluesEdited == 0] <- 0.000000000000001
combine.test(p=sSimObsFlarentPvaluesEdited, method="z.transform")
sSimObsFlaretPvaluesEdited <- sSimObsFlaretPvalues
sSimObsFlaretPvaluesEdited[sSimObsFlaretPvaluesEdited == 0] <- 0.000000000000001
combine.test(p=sSimObsFlaretPvaluesEdited, method="z.transform")
sSimObsPostflarePvaluesEdited <- sSimObsPostflarePvalues
sSimObsPostflarePvaluesEdited[sSimObsPostflarePvaluesEdited == 0] <- 0.000000000000001
combine.test(p=sSimObsPostflarePvaluesEdited, method="z.transform")
hist(sSimObsControlPvalues, 100)
hist(sSimObsBaselinePvalues, 100)
hist(sSimObsFlarentPvalues, 100)
hist(sSimObsFlaretPvalues, 100)
hist(sSimObsPostflarePvalues, 100)
save.image("~/data sim/ADdata/validation/NewValidation/10000SimulatedDatasets/Species/ValidationWorkspaceSpecies28APR2014.RData")
save(sSimObsControlPvalues, file="sSimObsControlPvalues.RData")
save(sSimObsBaselinePvalues, file="sSimObsBaselinePvalue.RData")
save(sSimObsFlarentPvalues, file="sSimObsFlarentPvalues.RData")
save(sSimObsFlaretPvalues, file="sSimObsFlaretPvalues.RData")
save(sSimObsPostflarePvalues, file="sSimObsPostflarePvalue.RData")
load("~/Rat Data/R/R/RatDataWorkspace21FEB2014.RData")
combine.test(p=d2LSCpValuesEdited, method="z.transform")
View(LSCCD4)
View(d2LSCsorted)
View(LSCCD2)
View(LsericataD2)
vLSCCED2[[1]]
View(pLsericataD2)
d2LSCpValues <- meanVarCheckPvalues(simlist=vLSCCED2, observedData=d2LSCsorted, reads=3000)
setwd("~/Rat Data/R/R/ValidationForRatSim")
LSCCED2 <- LsericataD2
pLSCCED2 <- pLsericataD2
setwd("~/Rat Data/R/R/ValidationForRatSim")
save(LSCCD4, file="LSCCD4Pub.RData")
save(LSCED4, file="LSCED4Pub.RData")
save(LSCCED2, file="LSCCED2Pub.RData")
save(pLSCCD4, file="pLSCCD4.RData")
save(pLSCED4, file="pLSCED4.RData")
save(pLSCCED2, file="pLSCCED2.RData")
save(vLSCCD4, file="vLSCCD4.RData")
save(vLSCCED2, file="vLSCCED2.RData")
save(LSCCED4, file="vLSCED4.RData")
save(vLSCED4, file="vLSCED4.RData")
load("~/Rat Data/R/R/ValidationForRatSim/LSCCD4Pub.RData")
load("~/Rat Data/R/R/ValidationForRatSim/LSCED4Pub.RData")
load("~/Rat Data/R/R/ValidationForRatSim/LSCCED2Pub.RData")
load("~/Rat Data/R/R/ValidationForRatSim/pLSCCD4.RData")
load("~/Rat Data/R/R/ValidationForRatSim/pLSCED4.RData")
load("~/Rat Data/R/R/ValidationForRatSim/pLSCCED2.RData")
load("~/Rat Data/R/R/ValidationForRatSim/vLSCCD4.RData")
load("~/Rat Data/R/R/ValidationForRatSim/vLSCCED2.RData")
load("~/Rat Data/R/R/ValidationForRatSim/vLSCED4.RData")
meanVarCheckPvalues <- function(simlist, observedData, reads){
observedData <- round(observedData*reads)
listLength <- length(simlist)
pValues <- numeric(length=listLength)
for(i in 1:listLength){
pValues[i] <- Xdc.sevsample(list(simlist[[i]], observedData))$'p value'
}
return(pValues)
}
d2LSCpValuesEdited <- d2LSCpValues
d2LSCpValues <- meanVarCheckPvalues(simlist=vLSCCED2, observedData=d2LSCsorted, reads=3000)
load("~/Rat Data/R/R/RatDataWorkspace21FEB2014.RData")
save(d2LSCsorted, file="d2LSCsorted.RData")
save(d4LSCCsorted, file="d4LSCCsorted.RData")
save(d4LSCEsorted, file="d4LSCEsorted.RData")
load("~/Rat Data/R/R/ValidationForRatSim/LSCCD4Pub.RData")
load("~/Rat Data/R/R/ValidationForRatSim/LSCCED2Pub.RData")
load("~/Rat Data/R/R/ValidationForRatSim/LSCED4Pub.RData")
load("~/Rat Data/R/R/ValidationForRatSim/pLSCCD4.RData")
load("~/Rat Data/R/R/ValidationForRatSim/pLSCCED2.RData")
load("~/Rat Data/R/R/ValidationForRatSim/pLSCED4.RData")
load("~/Rat Data/R/R/ValidationForRatSim/vLSCCD4.RData")
load("~/Rat Data/R/R/ValidationForRatSim/vLSCCED2.RData")
load("~/Rat Data/R/R/ValidationForRatSim/vLSCED4.RData")
load("~/Rat Data/R/R/ValidationForRatSim/d2LSCsorted.RData")
load("~/Rat Data/R/R/ValidationForRatSim/d4LSCCsorted.RData")
load("~/Rat Data/R/R/ValidationForRatSim/d4LSCEsorted.RData")
d2LSCpValues <- meanVarCheckPvalues(simlist=vLSCCED2, observedData=d2LSCsorted, reads=3000)
meanVarCheckPvalues <- function(simlist, observedData, reads){
observedData <- round(observedData*reads)
listLength <- length(simlist)
pValues <- numeric(length=listLength)
for(i in 1:listLength){
pValues[i] <- Xdc.sevsample(list(simlist[[i]], observedData))$'p value'
}
return(pValues)
}
d2LSCpValues <- meanVarCheckPvalues(simlist=vLSCCED2, observedData=d2LSCsorted, reads=3000)
mean(d2LSCpValues)
length(which(d2LSCpValues > 0.05))/length(d2LSCpValues)
d4LSCCpValues <- meanVarCheckPvalues(simlist=vLSCCD4, observedData=d4LSCCsorted, reads=3000)
mean(d4LSCCpValue)
mean(d4LSCCpValues)
length(which(d4LSCCpValues > 0.05))/length(d4LSCCpValue)
length(which(d4LSCCpValues > 0.05))/length(d4LSCCpValues)
d4LSCEpValues <- meanVarCheckPvalues(simlist=vLSCED4, observedData=d4LSCEsorted, reads=3000)
mean(d4LSCEpValues)
length(which(d4LSCEpValues > 0.05))/length(d4LSCCpValues)
d2LSCpValuesEdited <- d2LSCpValues
d2LSCpValuesEdited[d2LSCpValuesEdited == 0] <- 0.000000000000001
combine.test(p=d2LSCpValuesEdited, method="z.transform")
hist(d2LSCpValuesEdited, 100)
d4LSCCpValuesEdited <- d4LSCCpValues
d4LSCCpValuesEdited[d4LSCCpValuesEdited == 0] <- 0.000000000000001
combine.test(p=d4LSCCpValuesEdited, method="z.transform")
hist(d2LSCCpValueEdited, 100)
hist(d2LSCCpValuesEdited, 100)
hist(d4LSCCpValuesEdited, 100)
combine.test(p=d4LSCEpValues, method="z.transform")
hist(d4LSCEpValues, 100)
d4LSCEpValues
save.image("~/Rat Data/R/R/ValidationForRatSim/ValidationWorkspaceRatDataGenus.RData")
load("~/data sim/ADdata/validation/NewValidation/10000SimulatedDatasets/Phylum/ValidationWorkspacePhylum28APR2014.RData")
load("~/data sim/ADdata/validation/NewValidation/10000SimulatedDatasets/Species/ValidationWorkspaceSpecies28APR2014.RData")
setwd("~/data sim/ADdata/validation/NewValidation/10000SimulatedDatasets")
save.image("~/data sim/ADdata/validation/NewValidation/10000SimulatedDatasets/MicroSimValidationDatasetsALL28APR2014.RData")
library(PearsonDS)
dpearsonI(seq(1,3,by=0.5),params=pIpars)
dpearsonI(seq(1,3,by=0.5),params=list(a=2, b=3, location=1, scale=2))
curve(dpearsonI(seq(1,3,by=0.5),params=list(a=2, b=3, location=1, scale=2)))
curve(expr=dpearsonI(seq(1,3,by=0.5),params=list(a=2, b=3, location=1, scale=2)))
plot(dpearsonI(seq(1,3,by=0.5),params=list(a=2, b=3, location=1, scale=2)))
plot(qbeta(2,b))
plot(qbeta(2,3))
plot(qbeta(6,2,3))
plot(qbeta(x,2,3))
curve(dpearsonI(seq(1,3,by=0.5),params=list(a=2, b=3, location=1, scale=2)), 0, 1, 100)
curve(dpearsonI(x,params=list(a=2, b=3, location=1, scale=2)), 0, 1, 100)
curve(dpearsonI(x,params=list(a=.9, b=5, location=1, scale=2)), 0, 1, 100)
curve(dpearsonI(x,params=list(a=.9, b=5, location=1, scale=2)), 0, 1)
curve(dpearsonI(x,params=list(a=.9, b=5, location=1, scale=2)), 0, 10)
curve(dpearsonI(x,params=list(a=.9, b=5, location=1, scale=2)), 0, 100)
load("~/data sim/ADdata/validation/NewValidation/10000SimulatedDatasets/ADWorkspace.RData")
curve(function (x) dbeta(x,7,2), from=0, to=1.5, col="blue", yaxp = c(0, 3, 30))
y=function (x) dbeta(x,7,2)
curve(y, from=0, to=1.5, col="blue", yaxp = c(0, 3, 30))
abline(v=qbeta(.025,7,2))
abline(v=qbeta(.975,7,2))
curve(y, from=0, to=1.5, col="blue")
curve(y, from=0, to=1, col="blue")
load("~/data sim/ADdata/validation/NewValidation/10000SimulatedDatasets/MicroSimValidationDatasetsALL28APR2014.RData")
load("~/data sim/ADdata/validation/NewValidation/10000SimulatedDatasets/ValidationFunctions.RData")
source('~/data sim/ADdata/RevisingFunctionsForGeneralUse15NOV2013.R', echo=TRUE)
matrix(data=c(70,15,10,4,1))
matrix(data=c(70,15,10,4,1), nrow=5, ncol=1, dimnames=list(c("T1", "T2", "T3", "T4", "T5"), "Mean"))
matrix(data=c(25,20,15,10,5), nrow=5, ncol=1, dimnames=list(c("T1", "T2", "T3", "T4", "T5"), "SD"))
cbind(
matrix(data=c(70,15,10,4,1), nrow=5, ncol=1, dimnames=list(c("T1", "T2", "T3", "T4", "T5"), "Mean")),
matrix(data=c(25,20,15,10,5), nrow=5, ncol=1, dimnames=list(c("T1", "T2", "T3", "T4", "T5"), "SD"))
)
example <- cbind(
matrix(data=c(70,15,10,4,1), nrow=5, ncol=1, dimnames=list(c("T1", "T2", "T3", "T4", "T5"), "Mean")),
matrix(data=c(25,20,15,10,5), nrow=5, ncol=1, dimnames=list(c("T1", "T2", "T3", "T4", "T5"), "SD"))
)
example
getBetaParams(example)
Premainder(example)
x <- Premainder(example)
example <- cbind(
matrix(data=c(0.70,0.15,0.10,0.04,0.01), nrow=5, ncol=1, dimnames=list(c("T1", "T2", "T3", "T4", "T5"), "Mean")),
matrix(data=c(0.25,0.20,0.15,0.10,0.05), nrow=5, ncol=1, dimnames=list(c("T1", "T2", "T3", "T4", "T5"), "SD"))
)
x <- Premainder(example)
x
example[1,]
example[,1]
getBetaParams(x[,1], x[,2])
collectParametersx
collectParameters(x)
y=function (x) dbeta(x, 1.652000, 7.080000e-01)
curve(y, from=0, to=1)
library(PearsonDS)
?PearsonDS
ppearsonI(seq(1,3,by=0.5),params=pIpars)
ppearsonI(seq(1,3,by=0.5),params=list(a=2, b=3, location=1, scale=2))
y=function (x) dpearsonI(x=x, a=1.652000, b=7.080000e-01, location=0, scale=1)
curve(y, from=0, to=1)
y
y=function (x) dbeta(x, 1.652000, 7.080000e-01)
curve(y, from=0, to=1)
T1 <- function (x) dbeta(x, 1.652000, 7.080000e-01)
curve(T1, from=0, to=1)
params <- collectParameters(x)
param[1,]
params[1,]
T2 <- function(x) dpearson(x=x, params=params[2,])
T1 <- function (x) dpearson(x=x, params=params[1,])
curve(T1, from=0, to=1)
curve(T2, from=0, to=1)
curve(T3)
T3 <- function(x) dpearson(x=x, params=params[3,])
curve(T3)
curve(T2)
curve(T1)
T4 <- function(x) dpearson(x=x, params=params[4,])
curve(T4)
curve(T1)
curve(T2)
curve(T3)
curve(T4)
curve(T3)
curve(T2)
x
params
source('~/data sim/ADdata/RevisingFunctionsForGeneralUse15NOV2013.R', echo=TRUE)
library(HMP)
library(PearsonDS)
example <- cbind(
matrix(data=c(0.70,0.15,0.10,0.04,0.01), nrow=5, ncol=1, dimnames=list(c("T1", "T2", "T3", "T4", "T5"), "Mean")),
matrix(data=c(0.25,0.20,0.15,0.10,0.05), nrow=5, ncol=1, dimnames=list(c("T1", "T2", "T3", "T4", "T5"), "SD"))
)
x <- Premainder(example)
params <- collectParameters(x)
y=function (x) dpearsonI(x=x, a=1.652000, b=7.080000e-01, location=0, scale=1)
curve(y, from=0, to=1)
curve(T1,ylab=NA)
T1 <- function (x) dpearson(x=x, params=params[1,])
curve(T1,ylab=NA)
curve(T1)
curve(T2,col="blue", add=T)
T2 <- function(x) dpearson(x=x, params=params[2,])
curve(T2,col="blue", add=T)
T3 <- function(x) dpearson(x=x, params=params[3,])
curve(T3, col="red", add=T)
T4 <- function(x) dpearson(x=x, params=params[4,])
curve(T4, col="green", add="T")
curve(T1, ylab=NA)
curve(T2,col="blue", add=T)
curve(T3, col="red", add=T)
curve(T4, col="purple", add=T)
rm(y)
dpearson(x=1, params=params[1,])
rpearson(x=1, params=params[1,])
rpearson(n=1, params=params[1,])
rpearson(n=1, params=params[1,])
rpearson(n=100, params=params[1,])
mean(rpearson(n=100, params=params[1,]))
rpearson(n=1, params=params[1,])
rpearson(n=1, params=params[2,])
rpearson(n=1, params=params[3,])
rpearson(n=1, params=params[4,])
x
rpearson(n=1, params=params[2,])
rpearson(n=1, params=params[3,])
rpearson(n=1, params=params[4,])
rpearson(n=1, params=params[1,])
rpearson(n=1, params=params[2,])
rpearson(n=1, params=params[3,])
rpearson(n=1, params=params[4,])
rpearson(n=1, params=params[1,])
rpearson(n=1, params=params[2,])
rpearson(n=1, params=params[3,])
rpearson(n=1, params=params[4,])
set.seed(1234)
rpearson(n=1, params=params[1,])
rpearson(n=1, params=params[2,])
rpearson(n=1, params=params[3,])
rpearson(n=1, params=params[4,])
rpearson(n=1, params=params[1,])
rpearson(n=1, params=params[2,])
rpearson(n=1, params=params[3,])
rpearson(n=1, params=params[4,])
rpearson(n=1, params=params[1,])
rpearson(n=1, params=params[2,])
rpearson(n=1, params=params[3,])
rpearson(n=1, params=params[4,])
matrix(c(
rpearson(n=1, params=params[1,]),
rpearson(n=1, params=params[2,]),
rpearson(n=1, params=params[3,]),
rpearson(n=1, params=params[4,]),
))
matrix(c(
rpearson(n=1, params=params[1,]),
rpearson(n=1, params=params[2,]),
rpearson(n=1, params=params[3,]),
rpearson(n=1, params=params[4,])
))
matrix(c(
rpearson(n=1, params=params[1,]),
rpearson(n=1, params=params[2,]),
rpearson(n=1, params=params[3,]),
rpearson(n=1, params=params[4,])
))
a <- matrix(c(
rpearson(n=1, params=params[1,]),
rpearson(n=1, params=params[2,]),
rpearson(n=1, params=params[3,]),
rpearson(n=1, params=params[4,])
))
a
a
rm(a)
a <- matrix(c(
rpearson(n=1, params=params[1,]),
rpearson(n=1, params=params[2,]),
rpearson(n=1, params=params[3,]),
rpearson(n=1, params=params[4,])
))
a
rpearson(n=100, params=params[2,])
mean(rpearson(n=100, params=params[2,]))
median(rpearson(n=100, params=params[2,]))
rm(a)
median(rpearson(n=100, params=params[1,]))
median(rpearson(n=100, params=params[1,]))
median(rpearson(n=100, params=params[1,]))
rpearson(n=1, params=params[1,])
rpearson(n=1, params=params[2,])
rpearson(n=1, params=params[3,])
rpearson(n=1, params=params[4,])
curve(T1, from=0, to=1, ylab=NA)
curve(T2, from=0, to=1, col="blue", add=T)
curve(T3, from=0, to=1, col="red", add=T)
curve(T4, from=0, to=1, col="purple", add=T)
(x <- Premainder(example))
set.seed(1234)
example <- cbind(
matrix(data=c(0.70,0.15,0.10,0.04,0.01), nrow=5, ncol=1, dimnames=list(c("T1", "T2", "T3", "T4", "T5"), "Mean")),
matrix(data=c(0.25,0.20,0.15,0.10,0.05), nrow=5, ncol=1, dimnames=list(c("T1", "T2", "T3", "T4", "T5"), "SD"))
)
(x <- Premainder(example))
params <- collectParameters(x)
library(HMP)
(x <- Premainder(example))
source('~/data sim/ADdata/RevisingFunctionsForGeneralUse15NOV2013.R', echo=TRUE)
(x <- Premainder(example))
params <- collectParameters(x)
T1 <- function (x) dpearson(x=x, params=params[1,])
curve(T1, from=0, to=1)
library(PearsonDS)
T1 <- function (x) dpearson(x=x, params=params[1,])
curve(T1, from=0, to=1)
abline(v=.7)
T2 <- function(x) dpearson(x=x, params=params[2,])
curve(T2, from=0, to=1)
abline(v=.5)
T3 <- function(x) dpearson(x=x, params=params[3,])
curve(T3, from=0, to=1)
abline(v=2/3)
T4 <- function(x) dpearson(x=x, params=params[4,])
curve(T4, from=0, to=1)
abine(v=.8)
abline(v=.8)
abline(v=.7, col="red")
abline(v=.5, col="red")
abline(v=2/3, col="red")
abline(v=.8, col="red")
(x <- Premainder(example))
params
set.seed(1234)
example <- cbind(
matrix(data=c(0.70,0.15,0.10,0.04,0.01), nrow=5, ncol=1, dimnames=list(c("T1", "T2", "T3", "T4", "T5"), "Mean")),
matrix(data=c(0.25,0.20,0.15,0.10,0.05), nrow=5, ncol=1, dimnames=list(c("T1", "T2", "T3", "T4", "T5"), "SD"))
)
(x <- Premainder(example))
params <- collectParameters(x)
source('~/data sim/ADdata/validation/NewValidation/10000SimulatedDatasets/Functions for validation07MAR2014.R', echo=TRUE)
source('~/data sim/ADdata/RevisingFunctionsForGeneralUse15NOV2013.R', echo=TRUE)
set.seed(1234)
example <- cbind(
matrix(data=c(0.70,0.15,0.10,0.04,0.01), nrow=5, ncol=1, dimnames=list(c("T1", "T2", "T3", "T4", "T5"), "Mean")),
matrix(data=c(0.25,0.20,0.15,0.10,0.05), nrow=5, ncol=1, dimnames=list(c("T1", "T2", "T3", "T4", "T5"), "SD"))
)
(x <- Premainder(example))
params <- collectParameters(x)
params
library(HMP)
library(PearsonDS)
simulateBrokenStick(data=example,outputLabel="test",numberSubjects=10)
simulateBrokenStick
source('~/.active-rstudio-document', echo=TRUE)
simulateBrokenStick(data=example,outputLabel="test",numberSubjects=10)
simulateBrokenStick(data=example,outputLabel="test",numberSubjects=100)
source('~/.active-rstudio-document', echo=TRUE)
simulateBrokenStick(data=example,outputLabel="test",numberSubjects=100)
source('~/.active-rstudio-document', echo=TRUE)
simulateBrokenStick(data=example,outputLabel="test",numberSubjects=100)
Provided.SD <- array(data[,2]) #grabs the provided standard deviation
source('~/.active-rstudio-document', echo=TRUE)
simulateBrokenStick(data=example,outputLabel="test",numberSubjects=100)
simulateBrokenStick(data=example,outputLabel="test",numberSubjects=50)
simulateBrokenStick(data=example,outputLabel="test",numberSubjects=15)
simulateBrokenStick(data=example,outputLabel="test",numberSubjects=100)
simulateBrokenStick(data=example,outputLabel="test",numberSubjects=50)
simulateBrokenStick(data=example,outputLabel="test",numberSubjects=25)
simulateBrokenStick(data=example,outputLabel="test",numberSubjects=15)
simulateBrokenStick(data=example,outputLabel="test",numberSubjects=1000)
simulateBrokenStick(data=example,outputLabel="test",numberSubjects=500)
simulateBrokenStick(data=example,outputLabel="test",numberSubjects=250)
simulateBrokenStick(data=example,outputLabel="test",numberSubjects=100)
set.seed(1234)
library(HMP)
library(PearsonDS)
example <- cbind(
matrix(data=c(0.70,0.15,0.10,0.04,0.01), nrow=5, ncol=1, dimnames=list(c("T1", "T2", "T3", "T4", "T5"), "Mean")),
matrix(data=c(0.25,0.20,0.15,0.10,0.05), nrow=5, ncol=1, dimnames=list(c("T1", "T2", "T3", "T4", "T5"), "SD"))
)
(x <- Premainder(example))
params <- collectParameters(x)
source('~/data sim/ADdata/validation/NewValidation/10000SimulatedDatasets/Functions for validation07MAR2014.R', echo=TRUE)
source('~/data sim/ADdata/RevisingFunctionsForGeneralUse15NOV2013.R', echo=TRUE)
params <- collectParameters(x)
(x <- Premainder(example))
params <- collectParameters(x)
simulateBrokenStick(data=example,outputLabel="test",numberSubjects=100)
simData <- simulateBrokenStick(data=example,outputLabel="test",numberSubjects=100)
simData <- simulateBrokenStick(data=example,outputLabel="test",numberSubjects=100)
simData <- simulateBrokenStick(data=example,outputLabel="test",numberSubjects=100)
load("~/data sim/ADdata/validation/NewValidation/10000SimulatedDatasets/MicroSimValidationDatasetsALL28APR2014.RData")
pSimObsControlPvalues
length(which(pSimObsControlPvalues > 0.05))/length(pSimObsControlPvalues)
combine.test(p=pSimObsControlPvalues, method="z.transform")
library(HMP)
library(survcomp)
combine.test(p=pSimObsControlPvalues, method="z.transform")
combine.test(p=pSimObsBaselinePvalues, method="z.transform")
combine.test(p=pSimObsFlarentPvaluesEdited, method="z.transform") ###Change to small float value
combine.test(p=pSimObsFlaretPvalues, method="z.transform")
combine.test(p=pSimObsPostflarePvalues, method="z.transform")
hist(pSimObsControlPvalues, 100)
hist(pSimObsBaselinePvalues, 100)
hist(pSimObsFlarentPvalues, 100)
hist(pSimObsFlaretPvalues, 100)
hist(pSimObsPostflarePvalues, 100)
combine.test(p=sSimObsControlPvaluesEdited, method="z.transform")
combine.test(p=sSimObsBaselinePvaluesEdited, method="z.transform")
combine.test(p=sSimObsFlarentPvaluesEdited, method="z.transform")
combine.test(p=sSimObsFlaretPvaluesEdited, method="z.transform")
combine.test(p=sSimObsPostflarePvaluesEdited, method="z.transform")
hist(sSimObsControlPvalues, 100)
hist(sSimObsBaselinePvalues, 100)
hist(sSimObsFlarentPvalues, 100)
hist(sSimObsFlaretPvalues, 100)
hist(sSimObsPostflarePvalues, 100)
combine.test(p=d2LSCpValuesEdited, method="z.transform")
hist(d2LSCpValuesEdited, 100)
combine.test(p=d4LSCCpValuesEdited, method="z.transform")
hist(d4LSCCpValuesEdited, 100)
combine.test(p=d4LSCEpValues, method="z.transform")
hist(d4LSCEpValues, 100)
save(LSCED4, file="LSCED4Pub.RData")
