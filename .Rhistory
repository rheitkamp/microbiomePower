rActinoFNT <- rpearson(n=1, params=ActinoFNTparam)
ADFlareNT$Actinobacteria[i] <- (total*rActinoFNT)/100
total <- total - ADFlareNT$Actinobacteria[i]
###Generate number for Proteobacteria and place into table
rProteoFNT <- rpearson(n=1, params=ProteoFNTparam)
ADFlareNT$Proteobacteria <- (total*rProteoFNT)/100
total <- total - ADFlareNT$Proteobacteria
###Generate number for Bacteroidetes and place into table
rBacterFNT <- rpearson(n=1, params=BacterFNTparam)
ADFlareNT$Bacteroidetes <- (total*rBacterFNT)/100
###Remainder is placed into Others
ADFlareNT$Others <- total - ADFlareNT$Bacteroidetes
}
View(ADFlareNT)
source('~/.active-rstudio-document')
View(ADFlareNT)
View(ADFlaresNT)
View(ADFlareNT)
rpearson(n=1, params=ProteoFNTparam)
rpearson(n=1, params=ProteoFNTparam)
for (i in 1:size){
total <- 100
###Generate number for Firmicute and place into table
ADFlareNT$Firmicutes[i] <- rpearson(n=1, params=FirmFNTparam)
total <- total - ADFlareNT$Firmicutes[i]
###Generate number for Actinobacteria and place into table
rActinoFNT <- rpearson(n=1, params=ActinoFNTparam)
ADFlareNT$Actinobacteria[i] <- (total*rActinoFNT)/100
total <- total - ADFlareNT$Actinobacteria[i]
###Generate number for Proteobacteria and place into table
rProteoFNT <- rpearson(n=1, params=ProteoFNTparam)
ADFlareNT$Proteobacteria[i] <- (total*rProteoFNT)/100
total <- total - ADFlareNT$Proteobacteria[i]
###Generate number for Bacteroidetes and place into table
rBacterFNT <- rpearson(n=1, params=BacterFNTparam)
ADFlareNT$Bacteroidetes[i] <- (total*rBacterFNT)/100
###Remainder is placed into Others
ADFlareNT$Others[i] <- total - ADFlareNT$Bacteroidetes[i]
}
View(ADFlareNT)
apply(ADFlareNT,1,sum)
apply(ADFlareNT,2,mean)
apply(ADFlaresNT,2,mean)
apply(ADFlaresNT,1,mean)
apply(ADFlaresNT,1,mean)*100
View(ADFlaresNT)
numrow=100
numcol=5
ADFlareNT <- matrix(nrow=numrow,ncol=numcol)
ADFlareNT <- data.frame(ADFlareNT)
colnames(ADFlareNT) <- c("Firmicutes", "Actinobacteria", "Proteobacteria", "Bacteroidetes", "Others")
size <- dim(ADFlareNT)[1]
for (i in 1:size){
total <- 100
###Generate number for Firmicute and place into table
ADFlareNT$Firmicutes[i] <- rpearson(n=1, params=FirmFNTparam)
total <- total - ADFlareNT$Firmicutes[i]
###Generate number for Actinobacteria and place into table
rActinoFNT <- rpearson(n=1, params=ActinoFNTparam)
ADFlareNT$Actinobacteria[i] <- (total*rActinoFNT)/100
total <- total - ADFlareNT$Actinobacteria[i]
###Generate number for Proteobacteria and place into table
rProteoFNT <- rpearson(n=1, params=ProteoFNTparam)
ADFlareNT$Proteobacteria[i] <- (total*rProteoFNT)/100
total <- total - ADFlareNT$Proteobacteria[i]
###Generate number for Bacteroidetes and place into table
rBacterFNT <- rpearson(n=1, params=BacterFNTparam)
ADFlareNT$Bacteroidetes[i] <- (total*rBacterFNT)/100
###Remainder is placed into Others
ADFlareNT$Others[i] <- total - ADFlareNT$Bacteroidetes[i]
}
View(ADFlareNT)
apply(ADFlareNT,2,mean)*100
apply(ADFlareNT,2,mean)
numrow=1000
numcol=5
ADFlareNT <- matrix(nrow=numrow,ncol=numcol)
ADFlareNT <- data.frame(ADFlareNT)
colnames(ADFlareNT) <- c("Firmicutes", "Actinobacteria", "Proteobacteria", "Bacteroidetes", "Others")
size <- dim(ADFlareNT)[1]
for (i in 1:size){
total <- 100
###Generate number for Firmicute and place into table
ADFlareNT$Firmicutes[i] <- rpearson(n=1, params=FirmFNTparam)
total <- total - ADFlareNT$Firmicutes[i]
###Generate number for Actinobacteria and place into table
rActinoFNT <- rpearson(n=1, params=ActinoFNTparam)
ADFlareNT$Actinobacteria[i] <- (total*rActinoFNT)/100
total <- total - ADFlareNT$Actinobacteria[i]
###Generate number for Proteobacteria and place into table
rProteoFNT <- rpearson(n=1, params=ProteoFNTparam)
ADFlareNT$Proteobacteria[i] <- (total*rProteoFNT)/100
total <- total - ADFlareNT$Proteobacteria[i]
###Generate number for Bacteroidetes and place into table
rBacterFNT <- rpearson(n=1, params=BacterFNTparam)
ADFlareNT$Bacteroidetes[i] <- (total*rBacterFNT)/100
###Remainder is placed into Others
ADFlareNT$Others[i] <- total - ADFlareNT$Bacteroidetes[i]
}
View(ADFlareNT)
apply(ADFlareNT,2,mean)
apply(a,2,mean)
ActinoFNTparam
FirmFNTparam
FirmicutesFNT <- rpearson(n=1000, params=FirmFNTparam)
hist(FirmicutesFNT,100)
fix(ActinoFNTparam)
fix(ActinoFNT1)
fix(BacterFNTparam)
fix(FirmFNTparam)
fix(ProteoFNTparam)
View(ADFlaresNT)
FirmFNT1 <- as.numeric(ADFlaresNT[1,])*100
hist(FirmFNT1)
hist(FirmFNT1,100)
pearsonFitML(FirmFNT1)
pearsonFitML(FirmFNT1)
pearsonFitML(FirmFNT1)
FirmFNTparam <- pearsonFitML(FirmFNT1)
FirmFNTparam <- pearsonMSC(FirmFNT1)
FirmFNTparam
z <- rpearsonI(n=1000, 0.1756307,  0.1298554, 73.4214217, 24.2795783)
hist(z,100)
z <- rpearsonI(n=100, 0.1756307,  0.1298554, 73.4214217, 24.2795783)
hist(z,100)
fitdist(a)
fitdistr(a)
source('~/.active-rstudio-document')
View(ADControl)
for (i in 1:size){
total <- 100
###Generate number for Firmicutes
ADControl$Firmicutes[i] <- rpearson(n=1, params=FirmADCparam)
total <- total - ADControl$Firmicutes[i]
###Generate number for Actinobacteria
rActino <- rpearson(n=1, params=ActinoADCparam)
ADControl$Actinobacteria[i] <- (total*rActino)/100
total <- total - ADControl$Actinobacteria[i]
###Generate number for Proteobacteria
rProteo <- rpearson(n=1, params=ProteoADCparam)
ADControl$Proteobacteria[i] <- (total*rProteo)/100
total <- total - ADControl$Proteobacteria[i]
###Generate number for Bacteridetes
rBacter <- rpearsonI(n=1, params=)
ADControl$Bacteroidetes[i] <- (total*rBacter)/100
###Remainder is placed in Others
ADControl$Others[i] <- total - ADControl$Bacteroidetes[i]
}
ADControl <- data.matrix(ADControl)
x=10
y=5
ADControl <- matrix(nrow=x,ncol=y)
ADControl <- data.frame(ADControl)
colnames(ADControl) <- c("Firmicutes", "Actinobacteria", "Proteobacteria", "Bacteroidetes", "Others")
size <- dim(ADControl)[1]
for (i in 1:size){
total <- 100
###Generate number for Firmicutes
ADControl$Firmicutes[i] <- rpearson(n=1, params=FirmADCparam)
total <- total - ADControl$Firmicutes[i]
###Generate number for Actinobacteria
rActino <- rpearson(n=1, params=ActinoADCparam)
ADControl$Actinobacteria[i] <- (total*rActino)/100
total <- total - ADControl$Actinobacteria[i]
###Generate number for Proteobacteria
rProteo <- rpearson(n=1, params=ProteoADCparam)
ADControl$Proteobacteria[i] <- (total*rProteo)/100
total <- total - ADControl$Proteobacteria[i]
###Generate number for Bacteridetes
rBacter <- rpearsonI(n=1, params=)
ADControl$Bacteroidetes[i] <- (total*rBacter)/100
###Remainder is placed in Others
ADControl$Others[i] <- total - ADControl$Bacteroidetes[i]
}
ADControl <- data.matrix(ADControl)
library("PearsonDS")
###AD Controls %remaining dataset
control <- read.table("ADcontrolsredist.txt")
###0-100 AD Control extracted individual taxa dataset
Firm1 <- as.numeric(control[1,])*100
Actino1 <- as.numeric(control[2,])*100
Proteo1 <- as.numeric(control[3,])*100
Bacter1 <- as.numeric(control[4,])*100
###Fitting distribution 0-100
FirmADCparam <- pearsonFitML(Firm1)
ActinoADCparam <- pearsonFitML(Actino1)
ProteoADCparam <- pearsonFitML(Proteo1)
BacterADCparam <- pearsonFitML(Bacter1)
#####################Backbone of AD loop#######################
x=10
y=5
ADControl <- matrix(nrow=x,ncol=y)
ADControl <- data.frame(ADControl)
colnames(ADControl) <- c("Firmicutes", "Actinobacteria", "Proteobacteria", "Bacteroidetes", "Others")
size <- dim(ADControl)[1]
for (i in 1:size){
total <- 100
###Generate number for Firmicutes
ADControl$Firmicutes[i] <- rpearson(n=1, params=FirmADCparam)
total <- total - ADControl$Firmicutes[i]
###Generate number for Actinobacteria
rActino <- rpearson(n=1, params=ActinoADCparam)
ADControl$Actinobacteria[i] <- (total*rActino)/100
total <- total - ADControl$Actinobacteria[i]
###Generate number for Proteobacteria
rProteo <- rpearson(n=1, params=ProteoADCparam)
ADControl$Proteobacteria[i] <- (total*rProteo)/100
total <- total - ADControl$Proteobacteria[i]
###Generate number for Bacteridetes
rBacter <- rpearsonI(n=1, params=)
ADControl$Bacteroidetes[i] <- (total*rBacter)/100
###Remainder is placed in Others
ADControl$Others[i] <- total - ADControl$Bacteroidetes[i]
}
ADControl <- data.matrix(ADControl)
for (i in 1:size){
total <- 100
###Generate number for Firmicutes
ADControl$Firmicutes[i] <- rpearson(n=1, params=FirmADCparam)
total <- total - ADControl$Firmicutes[i]
###Generate number for Actinobacteria
rActino <- rpearson(n=1, params=ActinoADCparam)
ADControl$Actinobacteria[i] <- (total*rActino)/100
total <- total - ADControl$Actinobacteria[i]
###Generate number for Proteobacteria
rProteo <- rpearson(n=1, params=ProteoADCparam)
ADControl$Proteobacteria[i] <- (total*rProteo)/100
total <- total - ADControl$Proteobacteria[i]
###Generate number for Bacteridetes
rBacter <- rpearsonI(n=1, params=BacterADCparam)
ADControl$Bacteroidetes[i] <- (total*rBacter)/100
###Remainder is placed in Others
ADControl$Others[i] <- total - ADControl$Bacteroidetes[i]
}
ADControl <- data.matrix(ADControl)
###AD Controls %remaining dataset
control <- read.table("ADcontrolsredist.txt")
###0-100 AD Control extracted individual taxa dataset
Firm1 <- as.numeric(control[1,])*100
Actino1 <- as.numeric(control[2,])*100
Proteo1 <- as.numeric(control[3,])*100
Bacter1 <- as.numeric(control[4,])*100
###Fitting distribution 0-100
FirmADCparam <- pearsonFitML(Firm1)
ActinoADCparam <- pearsonFitML(Actino1)
ProteoADCparam <- pearsonFitML(Proteo1)
BacterADCparam <- pearsonFitML(Bacter1)
#####################Backbone of AD loop#######################
numrow <- 10
numcol <- 5
ADControl <- matrix(nrow=numrow,ncol=numcol)
ADControl <- data.frame(ADControl)
colnames(ADControl) <- c("Firmicutes", "Actinobacteria", "Proteobacteria", "Bacteroidetes", "Others")
size <- dim(ADControl)[1]
for (i in 1:size){
total <- 100
###Generate number for Firmicutes
ADControl$Firmicutes[i] <- rpearson(n=1, params=FirmADCparam)
total <- total - ADControl$Firmicutes[i]
###Generate number for Actinobacteria
rActino <- rpearson(n=1, params=ActinoADCparam)
ADControl$Actinobacteria[i] <- (total*rActino)/100
total <- total - ADControl$Actinobacteria[i]
###Generate number for Proteobacteria
rProteo <- rpearson(n=1, params=ProteoADCparam)
ADControl$Proteobacteria[i] <- (total*rProteo)/100
total <- total - ADControl$Proteobacteria[i]
###Generate number for Bacteridetes
rBacter <- rpearsonI(n=1, params=BacterADCparam)
ADControl$Bacteroidetes[i] <- (total*rBacter)/100
###Remainder is placed in Others
ADControl$Others[i] <- total - ADControl$Bacteroidetes[i]
}
ADControl <- data.matrix(ADControl)
View(ADControl)
ADControl$Firmicutes[1] <- rpearson(n=1, params=FirmADCparam)
numrow <- 10
numcol <- 5
ADControl <- matrix(nrow=numrow,ncol=numcol)
ADControl <- data.frame(ADControl)
colnames(ADControl) <- c("Firmicutes", "Actinobacteria", "Proteobacteria", "Bacteroidetes", "Others")
size <- dim(ADControl)[1]
for (i in 1:size){
total <- 100
###Generate number for Firmicutes
ADControl$Firmicutes[1] <- rpearson(n=1, params=FirmADCparam)
total <- total - ADControl$Firmicutes[i]
###Generate number for Actinobacteria
rActino <- rpearson(n=1, params=ActinoADCparam)
ADControl$Actinobacteria[i] <- (total*rActino)/100
total <- total - ADControl$Actinobacteria[i]
###Generate number for Proteobacteria
rProteo <- rpearson(n=1, params=ProteoADCparam)
ADControl$Proteobacteria[i] <- (total*rProteo)/100
total <- total - ADControl$Proteobacteria[i]
###Generate number for Bacteridetes
rBacter <- rpearsonI(n=1, params=BacterADCparam)
ADControl$Bacteroidetes[i] <- (total*rBacter)/100
###Remainder is placed in Others
ADControl$Others[i] <- total - ADControl$Bacteroidetes[i]
}
View(ADControl)
numrow <- 10
numcol <- 5
ADControl <- matrix(nrow=numrow,ncol=numcol)
ADControl <- data.frame(ADControl)
colnames(ADControl) <- c("Firmicutes", "Actinobacteria", "Proteobacteria", "Bacteroidetes", "Others")
size <- dim(ADControl)[1]
for (i in 1:size){
total <- 100
###Generate number for Firmicutes
ADControl$Firmicutes[i] <- rpearson(n=1, params=FirmADCparam)
total <- total - ADControl$Firmicutes[i]
###Generate number for Actinobacteria
rActino <- rpearson(n=1, params=ActinoADCparam)
ADControl$Actinobacteria[i] <- (total*rActino)/100
total <- total - ADControl$Actinobacteria[i]
###Generate number for Proteobacteria
rProteo <- rpearson(n=1, params=ProteoADCparam)
ADControl$Proteobacteria[i] <- (total*rProteo)/100
total <- total - ADControl$Proteobacteria[i]
###Generate number for Bacteridetes
rBacter <- rpearsonI(n=1, params=BacterADCparam)
ADControl$Bacteroidetes[i] <- (total*rBacter)/100
###Remainder is placed in Others
ADControl$Others[i] <- total - ADControl$Bacteroidetes[i]
}
View(ADControl)
###0-100 AD Control extracted individual taxa dataset
Firm1 <- as.numeric(control[1,])*100
Actino1 <- as.numeric(control[2,])*100
Proteo1 <- as.numeric(control[3,])*100
Bacter1 <- as.numeric(control[4,])*100
###Fitting distribution 0-100
FirmADCparam <- pearsonFitML(Firm1)
ActinoADCparam <- pearsonFitML(Actino1)
ProteoADCparam <- pearsonFitML(Proteo1)
BacterADCparam <- pearsonFitML(Bacter1)
#####################Backbone of AD loop#######################
numrow <- 100
numcol <- 5
ADControl <- matrix(nrow=numrow,ncol=numcol)
ADControl <- data.frame(ADControl)
colnames(ADControl) <- c("Firmicutes", "Actinobacteria", "Proteobacteria", "Bacteroidetes", "Others")
size <- dim(ADControl)[1]
for (i in 1:size){
total <- 100
###Generate number for Firmicutes
ADControl$Firmicutes[i] <- rpearson(n=1, params=FirmADCparam)
total <- total - ADControl$Firmicutes[i]
###Generate number for Actinobacteria
rActino <- rpearson(n=1, params=ActinoADCparam)
ADControl$Actinobacteria[i] <- (total*rActino)/100
total <- total - ADControl$Actinobacteria[i]
###Generate number for Proteobacteria
rProteo <- rpearson(n=1, params=ProteoADCparam)
ADControl$Proteobacteria[i] <- (total*rProteo)/100
total <- total - ADControl$Proteobacteria[i]
###Generate number for Bacteridetes
rBacter <- rpearsonI(n=1, params=BacterADCparam)
ADControl$Bacteroidetes[i] <- (total*rBacter)/100
###Remainder is placed in Others
ADControl$Others[i] <- total - ADControl$Bacteroidetes[i]
}
View(ADControl)
BacterADCparam
rpearsonI(n=1, params=BacterADCparam)
rpearsonI(n=1, params=BacterADCparam)
rBacter <- rpearsonI(n=1000, params=BacterADCparam)
numrow <- 100
numcol <- 5
ADControl <- matrix(nrow=numrow,ncol=numcol)
ADControl <- data.frame(ADControl)
colnames(ADControl) <- c("Firmicutes", "Actinobacteria", "Proteobacteria", "Bacteroidetes", "Others")
size <- dim(ADControl)[1]
for (i in 1:size){
total <- 100
###Generate number for Firmicutes
ADControl$Firmicutes[i] <- rpearson(n=1, params=FirmADCparam)
total <- total - ADControl$Firmicutes[i]
###Generate number for Actinobacteria
rActino <- rpearson(n=1, params=ActinoADCparam)
ADControl$Actinobacteria[i] <- (total*rActino)/100
total <- total - ADControl$Actinobacteria[i]
###Generate number for Proteobacteria
rProteo <- rpearson(n=1, params=ProteoADCparam)
ADControl$Proteobacteria[i] <- (total*rProteo)/100
total <- total - ADControl$Proteobacteria[i]
###Generate number for Bacteridetes
rBacter <- rpearson(n=1, params=BacterADCparam)
ADControl$Bacteroidetes[i] <- (total*rBacter)/100
###Remainder is placed in Others
ADControl$Others[i] <- total - ADControl$Bacteroidetes[i]
}
View(ADControl)
FirmFNTparam <- pearsonMSC(FirmFNT1)
FirmFNTparam
numrow=1000
numcol=5
ADFlareNT <- matrix(nrow=numrow,ncol=numcol)
ADFlareNT <- data.frame(ADFlareNT)
colnames(ADFlareNT) <- c("Firmicutes", "Actinobacteria", "Proteobacteria", "Bacteroidetes", "Others")
size <- dim(ADFlareNT)[1]
for (i in 1:size){
total <- 100
###Generate number for Firmicute and place into table
###ADFlareNT$Firmicutes[i] <- rpearson(n=1, params=FirmFNTparam)
ADFlareNT$Firmicutes[i] <- rpearsonI(n=1, a=0.1756307,  b=0.1298554, location=73.4214217, scale=24.2795783)
total <- total - ADFlareNT$Firmicutes[i]
###Generate number for Actinobacteria and place into table
rActinoFNT <- rpearson(n=1, params=ActinoFNTparam)
ADFlareNT$Actinobacteria[i] <- (total*rActinoFNT)/100
total <- total - ADFlareNT$Actinobacteria[i]
###Generate number for Proteobacteria and place into table
rProteoFNT <- rpearson(n=1, params=ProteoFNTparam)
ADFlareNT$Proteobacteria[i] <- (total*rProteoFNT)/100
total <- total - ADFlareNT$Proteobacteria[i]
###Generate number for Bacteroidetes and place into table
rBacterFNT <- rpearson(n=1, params=BacterFNTparam)
ADFlareNT$Bacteroidetes[i] <- (total*rBacterFNT)/100
###Remainder is placed into Others
ADFlareNT$Others[i] <- total - ADFlareNT$Bacteroidetes[i]
}
View(ADFlareNT)
apply(ADControl, 2, mean)
apply(ADFlareNT, 2, mean)
barchart.data(ADControl)
require("HMP")
Barchart.data(ADControl)
hist(rpearson(1000, params=FirmADCparam))
hist(rpearson(1000, params=FirmADCparam), breaks=100)
Firm <- as.numeric(control[1,])
Actino <- as.numeric(control[2,])
Proteo <- as.numeric(control[3,])
Bacter <- as.numeric(control[4,])
FirmADCparam <- pearsonFitML(Firm)
ActinoADCparam <- pearsonFitML(Actino)
ProteoADCparam <- pearsonFitML(Proteo)
BacterADCparam <- pearsonFitML(Bacter)
hist(rpearson(n=1000, params=FirmADCparam), breaks=100)
hist(rpearson(n=1000, params=ActinoADCparam), breaks=100)
hist(rpearson(n=1000, params=ProteoADCparam), breaks=100)
hist(rpearson(n=1000, params=BacterADCparam), breaks=100)
###Generates AD control dataset###
numrow <- 100 ###Number of subjects/samples you want to generate
numcol <- 5 ###Number of taxa
ADControl <- matrix(nrow=numrow,ncol=numcol)
ADControl <- data.frame(ADControl)
colnames(ADControl) <- c("Firmicutes", "Actinobacteria", "Proteobacteria", "Bacteroidetes", "Others")
size <- dim(ADControl)[1]
for (i in 1:size){
total <- 100
###Generate number for Firmicutes
ADControl$Firmicutes[i] <- rpearson(n=1, params=FirmADCparam)
total <- total - ADControl$Firmicutes[i]
###Generate number for Actinobacteria
rActino <- rpearson(n=1, params=ActinoADCparam)
ADControl$Actinobacteria[i] <- (total*rActino)/100
total <- total - ADControl$Actinobacteria[i]
###Generate number for Proteobacteria
rProteo <- rpearson(n=1, params=ProteoADCparam)
ADControl$Proteobacteria[i] <- (total*rProteo)/100
total <- total - ADControl$Proteobacteria[i]
###Generate number for Bacteridetes
rBacter <- rpearson(n=1, params=BacterADCparam)
ADControl$Bacteroidetes[i] <- (total*rBacter)/100
###Remainder is placed in Others
ADControl$Others[i] <- total - ADControl$Bacteroidetes[i]
}
View(ADControl)
###0-1 AD Control extracted each individual taxa dataset (proportions)
Firm <- as.numeric(control[1,])
Actino <- as.numeric(control[2,])
Proteo <- as.numeric(control[3,])
Bacter <- as.numeric(control[4,])
###Distribution parameters 0-1 (proportions)
FirmADCparam <- pearsonFitML(Firm)
ActinoADCparam <- pearsonFitML(Actino)
ProteoADCparam <- pearsonFitML(Proteo)
BacterADCparam <- pearsonFitML(Bacter)
###Histogram of taxa distributions
hist(rpearson(n=1000, params=FirmADCparam), breaks=100)
hist(rpearson(n=1000, params=ActinoADCparam), breaks=100)
hist(rpearson(n=1000, params=ProteoADCparam), breaks=100)
hist(rpearson(n=1000, params=BacterADCparam), breaks=100)
###Generates AD Control dataset (proportions)###
numrow <- 100 ###Number of subjects/samples you want to generate
numcol <- 5 ###Number of taxa
ADControl <- matrix(nrow=numrow,ncol=numcol)
ADControl <- data.frame(ADControl)
colnames(ADControl) <- c("Firmicutes", "Actinobacteria", "Proteobacteria", "Bacteroidetes", "Others")
size <- dim(ADControl)[1]
for (i in 1:size){
total <- 1
###Generate number for Firmicutes
ADControl$Firmicutes[i] <- rpearson(n=1, params=FirmADCparam)
total <- total - ADControl$Firmicutes[i]
###Generate number for Actinobacteria
rActino <- rpearson(n=1, params=ActinoADCparam)
ADControl$Actinobacteria[i] <- (total*rActino)/100
total <- total - ADControl$Actinobacteria[i]
###Generate number for Proteobacteria
rProteo <- rpearson(n=1, params=ProteoADCparam)
ADControl$Proteobacteria[i] <- (total*rProteo)/100
total <- total - ADControl$Proteobacteria[i]
###Generate number for Bacteridetes
rBacter <- rpearson(n=1, params=BacterADCparam)
ADControl$Bacteroidetes[i] <- (total*rBacter)/100
###Remainder is placed in Others
ADControl$Others[i] <- total - ADControl$Bacteroidetes[i]
}
View(ADControl)
