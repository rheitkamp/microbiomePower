<<<<<<< HEAD
ADControl$Bacteroidetes[i] <- (total*rBacter)/100
###Remainder is placed in Others
ADControl$Others[i] <- total - ADControl$Bacteroidetes[i]
}
View(ADControl)
FirmFNTparam <- pearsonMSC(FirmFNT1)
FirmFNTparam
numrow=1000
numcol=5
ADFlareNT <- matrix(nrow=numrow,ncol=numcol)
ADFlareNT <- data.frame(ADFlareNT)
colnames(ADFlareNT) <- c("Firmicutes", "Actinobacteria", "Proteobacteria", "Bacteroidetes", "Others")
size <- dim(ADFlareNT)[1]
for (i in 1:size){
total <- 100
###Generate number for Firmicute and place into table
###ADFlareNT$Firmicutes[i] <- rpearson(n=1, params=FirmFNTparam)
ADFlareNT$Firmicutes[i] <- rpearsonI(n=1, a=0.1756307,  b=0.1298554, location=73.4214217, scale=24.2795783)
total <- total - ADFlareNT$Firmicutes[i]
###Generate number for Actinobacteria and place into table
rActinoFNT <- rpearson(n=1, params=ActinoFNTparam)
ADFlareNT$Actinobacteria[i] <- (total*rActinoFNT)/100
total <- total - ADFlareNT$Actinobacteria[i]
###Generate number for Proteobacteria and place into table
rProteoFNT <- rpearson(n=1, params=ProteoFNTparam)
ADFlareNT$Proteobacteria[i] <- (total*rProteoFNT)/100
total <- total - ADFlareNT$Proteobacteria[i]
###Generate number for Bacteroidetes and place into table
rBacterFNT <- rpearson(n=1, params=BacterFNTparam)
ADFlareNT$Bacteroidetes[i] <- (total*rBacterFNT)/100
###Remainder is placed into Others
ADFlareNT$Others[i] <- total - ADFlareNT$Bacteroidetes[i]
}
View(ADFlareNT)
apply(ADControl, 2, mean)
apply(ADFlareNT, 2, mean)
barchart.data(ADControl)
require("HMP")
Barchart.data(ADControl)
hist(rpearson(1000, params=FirmADCparam))
hist(rpearson(1000, params=FirmADCparam), breaks=100)
Firm <- as.numeric(control[1,])
Actino <- as.numeric(control[2,])
Proteo <- as.numeric(control[3,])
Bacter <- as.numeric(control[4,])
FirmADCparam <- pearsonFitML(Firm)
ActinoADCparam <- pearsonFitML(Actino)
ProteoADCparam <- pearsonFitML(Proteo)
BacterADCparam <- pearsonFitML(Bacter)
hist(rpearson(n=1000, params=FirmADCparam), breaks=100)
hist(rpearson(n=1000, params=ActinoADCparam), breaks=100)
hist(rpearson(n=1000, params=ProteoADCparam), breaks=100)
hist(rpearson(n=1000, params=BacterADCparam), breaks=100)
###Generates AD control dataset###
numrow <- 100 ###Number of subjects/samples you want to generate
numcol <- 5 ###Number of taxa
ADControl <- matrix(nrow=numrow,ncol=numcol)
ADControl <- data.frame(ADControl)
colnames(ADControl) <- c("Firmicutes", "Actinobacteria", "Proteobacteria", "Bacteroidetes", "Others")
size <- dim(ADControl)[1]
for (i in 1:size){
total <- 100
###Generate number for Firmicutes
ADControl$Firmicutes[i] <- rpearson(n=1, params=FirmADCparam)
total <- total - ADControl$Firmicutes[i]
###Generate number for Actinobacteria
rActino <- rpearson(n=1, params=ActinoADCparam)
ADControl$Actinobacteria[i] <- (total*rActino)/100
total <- total - ADControl$Actinobacteria[i]
###Generate number for Proteobacteria
rProteo <- rpearson(n=1, params=ProteoADCparam)
ADControl$Proteobacteria[i] <- (total*rProteo)/100
total <- total - ADControl$Proteobacteria[i]
###Generate number for Bacteridetes
rBacter <- rpearson(n=1, params=BacterADCparam)
ADControl$Bacteroidetes[i] <- (total*rBacter)/100
###Remainder is placed in Others
ADControl$Others[i] <- total - ADControl$Bacteroidetes[i]
}
View(ADControl)
###0-1 AD Control extracted each individual taxa dataset (proportions)
=======
controls <- read.table("ADcontrols.txt")
library(HMP)
data(saliva)
barchart(saliva)
barchart(controls)
))
)
control1 <- array(C(0.359244469,  0.671044383,	0.276331639,	0.269166758,	0.150069156,	0.333149184,	0.443099196,	0.516356896,	0.357908236,	0.436807996,	0.382578589,	0.285195937,	0.125090059,	0.106318818,	0.875177396,	0.691970877,	0.645803699,	0.554053544,	0.26962963,	0.474536405,	0.579606773,	0.554370957)
)
control1 <- array(C(0.359244469,  0.671044383,	0.276331639,	0.269166758,	0.150069156,	0.333149184,	0.443099196,	0.516356896,	0.357908236,	0.436807996,	0.382578589,	0.285195937,	0.125090059,	0.106318818,	0.875177396,	0.691970877,	0.645803699,	0.554053544,	0.26962963,	0.474536405,	0.579606773,	0.554370957))
control1 <- list(C(0.359244469,  0.671044383,	0.276331639,	0.269166758,	0.150069156, 0.333149184,	0.443099196, 0.516356896,	0.357908236,	0.436807996,	0.382578589,	0.285195937,	0.125090059,	0.106318818,	0.875177396,	0.691970877,	0.645803699,	0.554053544,	0.26962963,	0.474536405,	0.579606773,	0.554370957))
control1 <- list(C(0.359244469, 0.671044383, 0.276331639, 0.269166758, 0.150069156, 0.333149184, 0.443099196, 0.516356896, 0.357908236, 0.436807996, 0.382578589, 0.285195937, 0.125090059, 0.106318818, 0.875177396, 0.691970877, 0.645803699, 0.554053544, 0.26962963, 0.474536405, 0.579606773, 0.554370957))
control1 <- list(c(0.359244469, 0.671044383, 0.276331639, 0.269166758, 0.150069156, 0.333149184, 0.443099196, 0.516356896, 0.357908236, 0.436807996, 0.382578589, 0.285195937, 0.125090059, 0.106318818, 0.875177396, 0.691970877, 0.645803699, 0.554053544, 0.26962963, 0.474536405, 0.579606773, 0.554370957))
hist(control1)
control1 <- array(c(0.359244469, 0.671044383, 0.276331639, 0.269166758, 0.150069156, 0.333149184, 0.443099196, 0.516356896, 0.357908236, 0.436807996, 0.382578589, 0.285195937, 0.125090059, 0.106318818, 0.875177396, 0.691970877, 0.645803699, 0.554053544, 0.26962963, 0.474536405, 0.579606773, 0.554370957))
hist(control1)
library(PearsonDS)
pearsonFitML(control1)
unlist(pearsonFitML(control1))
rpearsonI(n=100, 0.9977008, 2.1005555, 0.1063188, 0.9611892)
beta <- rpearsonI(n=100, 0.9977008, 2.1005555, 0.1063188, 0.9611892)
hist(beta,100)
beta <- rpearsonI(n=10000, 0.9977008, 2.1005555, 0.1063188, 0.9611892)
hist(beta,100)
beta <- rpearsonI(n=10000, 0.9977008, 2.1005555, 0.1063188, 0.9611892)
hist(beta,100)
beta <- rpearsonI(n=1000, 0.9977008, 2.1005555, 0.1063188, 0.9611892)
hist(beta,100)
control2 <- array(c(0.359244469, 0.671044383, 0.276331639, 0.269166758, 0.150069156, 0.333149184, 0.443099196, 0.516356896, 0.357908236, 0.436807996, 0.382578589, 0.285195937, 0.125090059, 0.106318818, 0.875177396, 0.691970877, 0.645803699, 0.554053544, 0.26962963, 0.474536405, 0.579606773, 0.554370957))*100
fix(control2)
unlist(pearsonFitML(control2))
beta2 <- rpearsonI(n=1000, 0.9922127,  2.0054740, 10.6318818, 89.3081162)
hist(beta2,100)
hist(beta1,100)
hist(beta,100)
controlActinobacteria <- array(c(0.138580221, 0.525894166, 0.250027094, 0.432774087, 0.097640358, 0.148109752, 0.429304816,	0.527600906, 0.285880301, 0.419387503, 0.4735928, 0.452791878, 0.88929961, 0.887595165, 0.357144544, 0.448015498, 0.144578314, 0.421637846,	0.172413792,	0.428535216, 0.376990496,	0.434151517))
unlist(pearsonFitML(controlActinobacteria))
pearsonFitML(controlActinobacteria))
pearsonFitML(controlActinobacteria)
load("J:/data sim/.Rhistory")
load("J:/data sim/.RData")
save.image("J:/data sim/.RData")
library("PearsonDS")
controldataset <- read.table("ADcontrolsredist.txt")
controldata <- data.frame(controldataset)
sapply(controldata,mode)
d <- data.frame(char = letters[1:5],
fake_char = as.character(1:5),
fac = factor(1:5),
char_fac = factor(letters[1:5]),
num = 1:5, stringsAsFactors = FALSE)
d
sapply(d, mode)
sapply(d, class)
data <- matirx(Firm,Actino,Proteo,Bacter,Other)
data <- matrix(Firm,Actino,Proteo,Bacter,Other)
Firm <- as.numeric(controldata[1,])
Actino <- as.numeric(controldata[2,])
Proteo <- as.numeric(controldata[3,])
Bacter <- as.numeric(controldata[4,])
Other <- as.numeric(controldata[5,])
data <- matrix(Firm,Actino,Proteo,Bacter,Other)
data <- matrix(c(Firm,Actino,Proteo,Bacter,Other))
View(data)
View(data)
View(data)
View(data)
View(data)
View(data)
View(data)
data <- data.frame(c(Firm,Actino,Proteo,Bacter,Other))
data <- data.frame(Firm,Actino,Proteo,Bacter,Other)
View(data)
data(saliva)
library("HMP")
data(saliva)
View(saliva)
View(data)
matrix(data)
matrix(data,nrow=5,ncol=22)
Library("PearsonDS")
library("PearsonDS")
Unlist(pearsonFitML(Firm))
unlist(pearsonFitML(Actino))
unlist(pearsonFitML(Firm))
unlist(pearsonFitML(Actino))
unlist(pearsonFitML(Proteo))
unlist(pearsonFitML(Bacter))
unlist(pearsonFitML(Other))
Firm
controldata
controldata[1,]
as.numeric(controldata[1,])
unlist(pearsonFitML(Firm))
unlist(pearsonFitML(Actino))
unlist(pearsonFitML(Proteo))
unlist(pearsonFitML(Bacter))
unlist(pearsonFitML(Other))
pearsonFitML(Other)
Firmicutes <- rpearsonI(n=1000, a=0.99874103, b=2.47718315, location=0.09764036, scale=1.03623409)
Firmicutes
hist(Firmicutes, 100)
Firmicutes <- rpearsonI(n=1000, a=0.9977008, b=2.1005555, location=0.1063188, scale=0.9611892)
hist(Firmicutes,100)
hist(Firmicutes,10)
hist(Firmicutes,1000)
hist(Firmicutes,100)
Actinobacteria<- rpearsonI(n=1000, a=0.99874103, b=2.47718315, location=0.09764036, scale=1.03623409)
hist(Actinobacteria,100)
Firmicutes <- rpearsonI(n=1000, a=0.9977008, b=2.1005555, location=0.1063188, scale=0.9611892)
hist(Firmicutes,100)
Actinobacteria<- rpearsonI(n=1000, a=0.99874103, b=2.47718315, location=0.09764036, scale=1.03623409)
hist(Actinobacteria,100)
Proteobacteria <- rpearsonI(n=1000, a=1.3711653, b=1.4778528, location=0.4542903, scale=0.4134097)
hist(Proteobacteria,100)
Bacteroidetes <- rpearsonI(n=1000, a=2.2113205, b=0.6628346, location=-0.2730789, scale=1.2522455)
hist(Bacteroidets, 100)
hist(Bacteroidetes, 100)
Others <- rpearsonIV(n=1000, m=3.207085e+00, nu=1.255142e+00, location=1.000000e+00, scale=1.673377e-07)
hist(Others,100)
hist(Bacter,100)
hist(Bacter,10)
Firm
unlist(pearsonFitML(Firm))
Firmicutes <- rpearsonI(n=1000, a=0.9977008, b=2.1005555, location=0.1063188, scale=0.9611892)
hist(Firmicutes,100)
Others <- rpearsonIV(n=1000, m=3.207085e+00, nu=1.255142e+00, location=1.000000e+00, scale=1.673377e-07)
hist(Others,100)
hist(Bacteroidetes, 100)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
x
source('E:/Development/R projects/microbiomePower/AD.R')
install.packages("PearsonDS")
source('E:/Development/R projects/microbiomePower/AD.R')
source('E:/Development/R projects/microbiomePower/AD.R')
source('E:/Development/R projects/microbiomePower/AD.R')
library("PearsonDS", lib.loc="C:/Users/rae.heitkamp/Documents/R/R-3.0.1/library")
source('E:/Development/R projects/microbiomePower/AD.R')
###AD Controls %remaining dataset
control <- read.table("ADcontrolsredist.txt")
###0-1 AD Control extracted each individual taxa dataset
>>>>>>> 99269d59ab9edf99a0cc2dd3758e7ad23e909a17
Firm <- as.numeric(control[1,])
Actino <- as.numeric(control[2,])
Proteo <- as.numeric(control[3,])
Bacter <- as.numeric(control[4,])
###Fitting distribution 0-1
unlist(pearsonFitML(Firm))
unlist(pearsonFitML(Actino))
unlist(pearsonFitML(Proteo))
unlist(pearsonFitML(Bacter))
###fitted distribution taxa generation 0-1
Firmicutes <- rpearsonI(n=1000, a=0.9977008, b=2.1005555, location=0.1063188, scale=0.9611892)
Actinobacteria<- rpearsonI(n=1000, a=0.99874103, b=2.47718315, location=0.09764036, scale=1.03623409)
Proteobacteria <- rpearsonI(n=1000, a=1.3711653, b=1.4778528, location=0.4542903, scale=0.4134097)
Bacteroidetes <- rpearsonI(n=1000, a=2.2113205, b=0.6628346, location=-0.2730789, scale=1.2522455)
###Histograms of generated taxa 0-1
hist(Firmicutes,100)
hist(Actinobacteria,100)
hist(Proteobacteria,100)
hist(Bacteroidetes, 100)
library("PearsonDS")
###AD Controls %remaining dataset
control <- read.table("ADcontrolsredist.txt")
###0-1 AD Control extracted each individual taxa dataset
Firm <- as.numeric(control[1,])
Actino <- as.numeric(control[2,])
Proteo <- as.numeric(control[3,])
Bacter <- as.numeric(control[4,])
###Fitting distribution 0-1
unlist(pearsonFitML(Firm))
unlist(pearsonFitML(Actino))
unlist(pearsonFitML(Proteo))
unlist(pearsonFitML(Bacter))
###fitted distribution taxa generation 0-1
Firmicutes <- rpearsonI(n=1000, a=0.9977008, b=2.1005555, location=0.1063188, scale=0.9611892)
Actinobacteria<- rpearsonI(n=1000, a=0.99874103, b=2.47718315, location=0.09764036, scale=1.03623409)
Proteobacteria <- rpearsonI(n=1000, a=1.3711653, b=1.4778528, location=0.4542903, scale=0.4134097)
Bacteroidetes <- rpearsonI(n=1000, a=2.2113205, b=0.6628346, location=-0.2730789, scale=1.2522455)
###Histograms of generated taxa 0-1
hist(Firmicutes,100)
hist(Actinobacteria,100)
hist(Proteobacteria,100)
hist(Bacteroidetes, 100)
###0-100 AD Control extracted individual taxa dataset
Firm1 <- as.numeric(control[1,])*100
Actino1 <- as.numeric(control[2,])*100
Proteo1 <- as.numeric(control[3,])*100
Bacter1 <- as.numeric(control[4,])*100
###Fitting distribution 0-100
<<<<<<< HEAD
FirmFNTparam <- pearsonFitML(FirmFNT1)
ActinoFNTparam <-pearsonFitML(ActinoFNT1)
ProteoFNTparam <- pearsonFitML(ProteoFNT1)
BacterFNTparam <- pearsonFitML(BacterFNT1)
###Fitted distribution dataset generation
FirmicutesFNT <- rpearson(n=1000, params=FirmFNTparam)
ActinobacteriaFNT <- rpearson(n=1000, params=ActinoFNTparam)
ProteobacteriaFNT <- rpearson(n=1000, params=ProteoFNTparam)
BacteroidetesFNT <- rpearson(n=1000, params=BacterFNTparam)
numrow=100
numcol=5
ADFlareNT <- matrix(nrow=numrow,ncol=numcol)
ADFlareNT <- data.frame(ADFlareNT)
colnames(ADFlareNT) <- c("Firmicutes", "Actinobacteria", "Proteobacteria", "Bacteroidetes", "Others")
size <- dim(ADFlareNT)[1]
for (i in 1:size){
total <- 100
###Generate number for Firmicute and place into table
ADFlareNT$Firmicutes[i] <- rpearson(n=1, params=FirmFNTparam)
total <- total - ADFlareNT$Firmicutes[i]
###Generate number for Actinobacteria and place into table
rActinoFNT <- rpearson(n=1, params=ActinoFNTparam)
ADFlareNT$Actinobacteria[i] <- (total*rActinoFNT)/100
total <- total - ADFlareNT$Actinobacteria[i]
###Generate number for Proteobacteria and place into table
rProteoFNT <- rpearson(n=1, params=ProteoFNTparam)
ADFlareNT$Proteobacteria[i] <- (total*rProteoFNT)/100
total <- total - ADFlareNT$Proteobacteria[i]
###Generate number for Bacteroidetes and place into table
rBacterFNT <- rpearson(n=1, params=BacterFNTparam)
ADFlareNT$Bacteroidetes[i] <- (total*rBacterFNT)/100
###Remainder is placed into Others
ADFlareNT$Others[i] <- total - ADFlareNT$Bacteroidetes[i]
}
Barchart.data(ADFlareNT)
rpearsonI(10,.5,.5)
rpearsonI(10,.5,.5, 1, 1)
rpearsonI(10,.5,.5, 1, 0)
rpearsonI(10,.5,.5, 0,1)
rpearsonI(100,.5,.5, 0,1)
mean(rpearsonI(100,.5,.5, 0,1))
sd(rpearsonI(100,.5,.5, 0,1))
.5/(.5+.5)
(.25)/2
sqrt(.125)
rpearsonI(10, 6.9523,2.2695,0,1)
library("PearsonDS")
rpearsonI(10, 6.9523,2.2695,0,1)
a <- rpearsonI(10, 6.9523,2.2695,0,1)
a <- rpearsonI(100, 6.9523,2.2695,0,1)
hist(a,100)
a <- rpearsonI(1000, 6.9523,2.2695,0,1)
hist(a,100)
mean(a)
sd(a)
help(sd)
a <- rpearsonI(1000, -.1664,-.0543,0,1)
hist(a)
hist(a,10)
a <- rpearsonI(1000, 6.9523,2.2695,0,1)
hist(a,10)
mean(a)
sd(a)
a <- rpearsonI(1000, .395865,.1292245,0,1)
mean(a)
sd(a)
hist(a,10)
a <- rpearsonI(1000, .812235,.26514,0,1)
hist(a,10)
sd(a)
mean(a)
hist(a,100)
a <- rpearsonI(1000, .395865,.1.50857,0,1)
a <- rpearsonI(1000, .395865,1.50857,0,1)
hist(a,100)
mean(a)
sd(a)
a <- rpearsonI(1000, 1.71339,.559312,0,1)
mean(a)
sd(a)
hist(a,100)
a <- rpearsonI(1000, 0.288381,15.051,0,1)
hist(a,100)
sd(a)
mean(a)
a <- rpearsonI(1000, 0.149222,3.59069,0,1)
mean(a)
sd(a)
a <- rpearsonI(1000, 0.149222,3.59069,0,1)
hist(a,100)
hilbert <- function(n) { i <- 1:n; 1 / outer(i - 1, i, "+") }
fix(hilbert)
h8 <- hilbert(8); h8
sh8 <- solve(h8)
round(sh8 %*% h8, 3)
A <- hilbert(4)
A[] <- as.complex(A)
## might not be supported on all platforms
try(solve(A))
a <- rpearsonI(1000, 1.71339,.559312,0,1)
hist(a,100)
b <- rpearsonI(1000, .720741, 3.46475,0,1)
hist(b,100)
a <- rpearsonI(10, 1.71339,.559312,0,1)
a <- rpearsonI(1000, 1.71339,.559312,0,1)
hist(a,10)
a <- rpearsonI(10, 1.71339,.559312,0,1)
hist(a,10)
a
a <- rpearsonI(50, 1.71339,.559312,0,1)
hist(a,10)
a
mean(a)
sd(a)
a <- rpearsonI(100, 1.71339,.559312,0,1)
a <- rpearsonI(1000, 1.71339,.559312,0,1)
mean(a)
a <- rpearsonI(5, 1.71339,.559312,0,1)
b <- rpearsonI(5, .720741, 3.46475,0,1)
a
b
library("PearsonDS")
###AD Controls %remaining dataset
control <- read.table("ADcontrolsredist.txt")
###0-1 AD Control extracted each individual taxa dataset (proportions)
Firm <- as.numeric(control[1,])
Actino <- as.numeric(control[2,])
Proteo <- as.numeric(control[3,])
Bacter <- as.numeric(control[4,])
###Distribution parameters 0-1 (proportions)
FirmADCparam <- pearsonFitML(Firm)
ActinoADCparam <- pearsonFitML(Actino)
ProteoADCparam <- pearsonFitML(Proteo)
BacterADCparam <- pearsonFitML(Bacter)
###Histogram of taxa distributions
hist(rpearson(n=1000, params=FirmADCparam), breaks=100)
hist(rpearson(n=1000, params=ActinoADCparam), breaks=100)
hist(rpearson(n=1000, params=ProteoADCparam), breaks=100)
hist(rpearson(n=1000, params=BacterADCparam), breaks=100)
###Generates AD Control dataset (proportions)###
numrow <- 100 ###Number of subjects/samples you want to generate
numcol <- 5 ###Number of taxa
ADControl <- matrix(nrow=numrow,ncol=numcol)
ADControl <- data.frame(ADControl)
colnames(ADControl) <- c("Firmicutes", "Actinobacteria", "Proteobacteria", "Bacteroidetes", "Others")
size <- dim(ADControl)[1]
for (i in 1:size){
total <- 1
###Generate number for Firmicutes
ADControl$Firmicutes[i] <- rpearson(n=1, params=FirmADCparam)
total <- total - ADControl$Firmicutes[i]
###Generate number for Actinobacteria
rActino <- rpearson(n=1, params=ActinoADCparam)
ADControl$Actinobacteria[i] <- (total*rActino)
total <- total - ADControl$Actinobacteria[i]
###Generate number for Proteobacteria
rProteo <- rpearson(n=1, params=ProteoADCparam)
ADControl$Proteobacteria[i] <- (total*rProteo)
total <- total - ADControl$Proteobacteria[i]
###Generate number for Bacteridetes
rBacter <- rpearson(n=1, params=BacterADCparam)
ADControl$Bacteroidetes[i] <- (total*rBacter)
###Remainder is placed in Others
ADControl$Others[i] <- total - ADControl$Bacteroidetes[i]
}
View(ADControl)
for (i in 1:size){
total <- 1
###Generate number for Firmicutes
ADControl$Firmicutes[i] <- rpearson(n=1, params=FirmADCparam)
total <- total - ADControl$Firmicutes[i]
###Generate number for Actinobacteria
rActino <- rpearson(n=1, params=ActinoADCparam)
ADControl$Actinobacteria[i] <- (total*rActino)
total <- total - ADControl$Actinobacteria[i]
###Generate number for Proteobacteria
rProteo <- rpearson(n=1, params=ProteoADCparam)
ADControl$Proteobacteria[i] <- (total*rProteo)
total <- total - ADControl$Proteobacteria[i]
###Generate number for Bacteridetes
rBacter <- rpearson(n=1, params=BacterADCparam)
ADControl$Bacteroidetes[i] <- (total*rBacter)
###Remainder is placed in Others
ADControl$Others[i] <- total - ADControl$Bacteroidetes[i]
}
View(ADControl)
17.22/(100-75.39)
(17.22/(100-75.39))8100
(17.22/(100-75.39))100
(17.22/(100-75.39))*100
read.table("UpperRmean.txt")
read.table("UpperRmean.txt")
a <- read.table("UpperRmean.txt")
a <- data.matrix(a)
View(a)
matrix(dimnames=a)
rownames(a)
matrix(dimnames=rownames(a))
b <- rownames(a)
data.frame(b)
data.matrix(rownames.force=b)
matrix(dimnames=b)
dim(a)
dim(a)[1]
dim(a)[2]
matrix(nrow=rowsize,ncol=colsize)
rowsize <- dim(a)[1]
colsize <- dim(a)[2]
matrix(nrow=rowsize,ncol=colsize)
b <- rownames(a)
b
list(b)
b <- list(rownames(a))
matrix(dimnames=b)
matrix(nrow=rowsize,ncol=colsize, dimnames=b)
%remainder <- matrix(nrow=rowsize,ncol=colsize, dimnames=b)
percentremainder <- matrix(nrow=rowsize,ncol=colsize, dimnames=b)
percentremainder$mean[1] <- 75.390
premainder <- data.frame(percentremainder)
premainder$mean[1] <- 75.390
View(premainder)
View(percentremainder)
premainder <- matrix(nrow=rowsize,ncol=colsize, dimnames=b)
premainder <- matrix(nrow=rowsize,ncol=colsize, dimnames=b)
premainder <- data.frame(premainder)
View(premainder)
premainder <- data.frame(premainder,row.names=mean)
premainder <- data.frame(premainder,row.names="mean")
View(premainder)
premainder <- data.frame(matrix(nrow=rowsize,ncol=colsize, dimnames=b))
View(premainder)
premainder <- data.frame(mean)
mean <- matrix(nrow=rowsize,ncol=colsize, dimnames=b)
premainder <- data.frame(mean)
View(premainder)
premainder$mean[1] <- 75.390
View(premainder)
View(a)
premainder$mean[1] <- a$mean[1]
a <- data.frame(a)
premainder$mean[1] <- a$mean[1]
View(premainder)
mean <- matrix(nrow=rowsize,ncol=colsize, dimnames=b)
premainder <- data.frame(mean)
premainder$mean[1] <- a$mean[1]
View(premainder)
=======
unlist(pearsonFitML(Firm1))
unlist(pearsonFitML(Actino1))
unlist(pearsonFitML(Proteo1))
unlist(pearsonFitML(Bacter1))
###fitted distribution taxa generation 0-100
Firmicutes1 <- rpearsonI(n=1000, a=0.9970149, b=2.0062602, location=10.6318818, scale=89.3067879)
hist(Firmicutes1, 100)
hist(Actinobacteria1, 100)
Firmicutes1 <- rpearsonI(n=1000, a=0.9970149, b=2.0062602, location=10.6318818, scale=89.3067879)
Actinobacteria1 <- rpearsonII(n=1000, a=0.840323, location=9.764036, scale=81.726210)
Proteobacteria1 <- rpearsonI(n=1000, a=1.371166,  b=1.477854, location=45.429029, scale=41.340968)
Bacteroidetes1 <- rpearsonI(n=1000, a=2.2098166, b=0.6798847, location=-12.4973479, scale=110.4140148)
###Histograms 0-100
hist(Firmicutes1, 100)
hist(Actinobacteria1, 100)
hist(Proteobacteria1, 100)
hist(Bacteroidetes1, 100)
unlist(pearsonFitML(Actino))
unlist(pearsonFitML(Actino1))
pearsonsMSC
pearsonMSC(Actino)
pearsonMSC(Actino1)
a <- rpearsonI(1000 ,0.9542805,  2.3447883,  9.7640358, 98.5426251)
hist(a)
hist(a, bins=100)
hist(a, 100)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
Prot1
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
>>>>>>> 99269d59ab9edf99a0cc2dd3758e7ad23e909a17
